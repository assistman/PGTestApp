webpackJsonp([88],{

/***/ 2119:
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(_) {var __WEBPACK_AMD_DEFINE_RESULT__;var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, module) {\n    var _ = __webpack_require__(0);\n    var server = __webpack_require__(11);\n    var conversionRateSubscription = __webpack_require__(296);\n    var stream = __webpack_require__(28);\n    var user = __webpack_require__(10);\n    var EditPositionModel = __webpack_require__(870);\n    var EditOrderModel = __webpack_require__(871);\n\n    var TAKE_PROFIT = 'takeProfit';\n    var STOP_LOSS = 'stopLoss';\n\n    var Editor = function () {\n        function Editor() {\n            _classCallCheck(this, Editor);\n        }\n\n        _createClass(Editor, null, [{\n            key: 'initEditing',\n            value: function initEditing(handler, model, subscribeToConversion, _ref) {\n                var onChangeProfitForTakeProfit = _ref.onChangeProfitForTakeProfit,\n                    onChangeLossForStopLoss = _ref.onChangeLossForStopLoss,\n                    onChangeRate = _ref.onChangeRate,\n                    onChangeConversionRate = _ref.onChangeConversionRate;\n\n                onChangeConversionRate && handler.listenTo(model, 'change:conversionRate', onChangeConversionRate);\n                onChangeRate && handler.listenTo(model, 'change:rate', onChangeRate);\n                onChangeProfitForTakeProfit && handler.listenTo(model, 'change:profitForTakeProfit', onChangeProfitForTakeProfit);\n                onChangeLossForStopLoss && handler.listenTo(model, 'change:lossForStopLoss', onChangeLossForStopLoss);\n\n                subscribeToConversion && Editor.sendSubscribeToConversion(model.getInstrument().getCurrency(), user.getUserCurrency());\n            }\n        }, {\n            key: 'createEditPositionModel',\n            value: function createEditPositionModel(position, instrument) {\n                var type = position.get('quantity') < 0 ? 'Sell' : 'Buy';\n\n                return new EditPositionModel({\n                    instrumentModel: instrument,\n                    type: type,\n                    direction: type,\n                    position: position\n                });\n            }\n        }, {\n            key: 'stopEditing',\n            value: function stopEditing(handler, model, unsubscribeFromConversion) {\n                handler.stopListening(model);\n                unsubscribeFromConversion && Editor.sendUnsubscribeFromConversion(model.getInstrument().getCurrency(), user.getUserCurrency());\n            }\n        }, {\n            key: 'sendSubscribeToConversion',\n            value: function sendSubscribeToConversion(from, to) {\n                return conversionRateSubscription.add(from, to).then(Editor.requestConversionSubscriptionSuccess).catch(Editor.requestConversionSubscriptionError);\n            }\n        }, {\n            key: 'sendUnsubscribeFromConversion',\n            value: function sendUnsubscribeFromConversion(from, to) {\n                return conversionRateSubscription.remove(from, to).then(Editor.requestConversionUnsubscriptionSuccess).catch(Editor.requestConversionUnsubscriptionError);\n            }\n        }, {\n            key: 'requestConversionSubscriptionSuccess',\n            value: function requestConversionSubscriptionSuccess(res) {\n                console.log('Subscribe conversion... OK', res);\n\n                return Promise.resolve(res);\n            }\n        }, {\n            key: 'requestConversionSubscriptionError',\n            value: function requestConversionSubscriptionError(res) {\n                console.log('Subscribe conversion... ERROR', res);\n\n                return Promise.reject(res);\n            }\n        }, {\n            key: 'requestConversionUnsubscriptionSuccess',\n            value: function requestConversionUnsubscriptionSuccess(res) {\n                console.log('Unsubscribe conversion... OK', res);\n\n                return Promise.resolve(res);\n            }\n        }, {\n            key: 'requestConversionUnsubscriptionError',\n            value: function requestConversionUnsubscriptionError(res) {\n                console.log('Unsubscribe conversion... ERROR', res);\n\n                return Promise.reject(res);\n            }\n        }, {\n            key: 'removePositionStopLoss',\n            value: function removePositionStopLoss(model) {\n                return Editor.requestEditPosition(model, [TAKE_PROFIT]).then(Editor.onSubmitSuccess).catch(Editor.onSubmitError);\n            }\n        }, {\n            key: 'removePositionTakeProfit',\n            value: function removePositionTakeProfit(model) {\n                return Editor.requestEditPosition(model, [STOP_LOSS]).then(Editor.onSubmitSuccess).catch(Editor.onSubmitError);\n            }\n        }, {\n            key: 'removeOrderStopLoss',\n            value: function removeOrderStopLoss(model) {\n                return Editor.requestPlaceOrder(model, [TAKE_PROFIT]).then(Editor.onSubmitSuccess).catch(Editor.onSubmitError);\n            }\n        }, {\n            key: 'removeOrderTakeProfit',\n            value: function removeOrderTakeProfit(model) {\n                return Editor.requestPlaceOrder(model, [STOP_LOSS]).then(Editor.onSubmitSuccess).catch(Editor.onSubmitError);\n            }\n        }, {\n            key: 'requestEditPosition',\n            value: function requestEditPosition(model, fieldsToSave) {\n                console.log('Edit Position...');\n\n                var editPositionData = [];\n\n                if (fieldsToSave.indexOf(TAKE_PROFIT) >= 0 && model.getPositionModel().get(TAKE_PROFIT)) {\n                    var takeProfit = {\n                        fixedOffset: model.minOrderDistance(),\n                        fixedPrice: model.getTakeProfit(),\n                        isPriceFixed: true,\n                        orderType: 'LIMIT',\n                        requestId: null\n                    };\n\n                    editPositionData.push(takeProfit);\n                }\n\n                if (fieldsToSave.indexOf(STOP_LOSS) >= 0 && model.getPositionModel().get(STOP_LOSS)) {\n                    var stopLoss = {\n                        fixedOffset: model.minOrderDistance(),\n                        fixedPrice: model.getStopLoss(),\n                        isPriceFixed: true,\n                        orderType: 'STOP',\n                        requestId: null\n                    };\n\n                    editPositionData.push(stopLoss);\n                }\n\n                return server.editPosition(stream.getAtmosphereId(), editPositionData, model.getPositionCode());\n            }\n        }, {\n            key: 'onSubmitSuccess',\n            value: function onSubmitSuccess() {\n                console.log('Submit... OK');\n\n                return Promise.resolve();\n            }\n        }, {\n            key: 'onSubmitError',\n            value: function onSubmitError() {\n                console.log('Submit... ERROR');\n\n                return Promise.reject(res);\n            }\n\n            /*-----------------*/\n\n            // same as in events.bus but with instrument in arguments\n\n        }, {\n            key: 'getOrderAttributes',\n            value: function getOrderAttributes(order, instrument) {\n                var quantity = order.get('quantity');\n                var action = quantity > 0 ? 'buy' : 'sell';\n                var type = order.get('type');\n                var price = null;\n                var orderPosition = null;\n                var takeProfit = order.get(TAKE_PROFIT);\n                var stopLoss = order.get(STOP_LOSS);\n\n                switch (type) {\n                    case 'STOP':\n                        type = 'Entry Stop';\n                        orderPosition = action === 'buy' ? 'above' : 'below';\n                        price = order.get('stopPrice');\n                        break;\n                    case 'LIMIT':\n                        type = 'Entry Limit';\n                        orderPosition = action === 'buy' ? 'below' : 'above';\n                        price = order.get('limitPrice');\n                        break;\n                }\n\n                return {\n                    instrument: instrument,\n                    order: order,\n                    action: action,\n                    quantity: Math.abs(quantity),\n                    type: type,\n                    orderPosition: orderPosition,\n                    price: price,\n                    takeProfit: takeProfit && takeProfit.fixedPrice,\n                    stopLoss: stopLoss && stopLoss.fixedPrice\n                };\n            }\n        }, {\n            key: 'createEditOrderModel',\n            value: function createEditOrderModel(order, instrument) {\n                var attributes = Editor.getOrderAttributes(order, instrument);\n\n                return new EditOrderModel({\n                    instrumentModel: attributes.instrument,\n                    type: attributes.action,\n                    direction: attributes.action.toUpperCase(),\n                    order: attributes.order,\n                    takeProfit: attributes.takeProfit,\n                    stopLoss: attributes.stopLoss\n                });\n            }\n        }, {\n            key: 'requestPlaceOrder',\n            value: function requestPlaceOrder(model, fieldsToSave) {\n                console.log('Place order...');\n\n                var editOrderData = {\n                    effect: 'OPENING',\n                    instrumentId: model.getInstrumentModel().getId(),\n                    orderSide: model.getDirection(),\n                    orderType: model.order.getType(),\n                    // quantity: model.isSell() ? -(model.getAmount()) : model.getAmount(),\n                    quantity: model.getAmount(),\n                    refOrderChainId: model.order.getOrderChainId(),\n                    requestId: _.uniqueId('gwt-uid-'),\n                    timeInForce: 'GTC'\n                };\n\n                if (model.order.isLimitPrice()) {\n                    editOrderData.limitPrice = model.getCurrentPrice();\n                    editOrderData.stopPrice = null;\n                } else {\n                    editOrderData.limitPrice = null;\n                    editOrderData.stopPrice = model.getCurrentPrice();\n                }\n\n                if (fieldsToSave.indexOf(STOP_LOSS) >= 0 && model.order.get(STOP_LOSS)) {\n                    editOrderData.stopLoss = {\n                        fixedOffset: model.minOrderDistance(false),\n                        fixedPrice: model.getStopLoss(),\n                        isPriceFixed: true,\n                        orderType: 'STOP'\n                    };\n                }\n\n                if (fieldsToSave.indexOf(TAKE_PROFIT) >= 0 && model.order.get(TAKE_PROFIT)) {\n                    editOrderData.takeProfit = {\n                        fixedOffset: model.minOrderDistance(false),\n                        fixedPrice: model.getTakeProfit(),\n                        isPriceFixed: true,\n                        orderType: 'LIMIT'\n                    };\n                }\n\n                // dirty hack for revert rate after order's reject\n                model.order.unset('modifiedTime', { silent: true });\n\n                return server.placeOrder(stream.getAtmosphereId(), editOrderData);\n            }\n        }, {\n            key: 'updatePositionTakeProfit',\n            value: function updatePositionTakeProfit(model) {\n                return Editor.updatePosition(model);\n            }\n        }, {\n            key: 'updatePositionStopLoss',\n            value: function updatePositionStopLoss(model) {\n                return Editor.updatePosition(model);\n            }\n        }, {\n            key: 'updatePosition',\n            value: function updatePosition(model) {\n                return Editor.requestEditPosition(model, [TAKE_PROFIT, STOP_LOSS]).then(Editor.onSubmitSuccess).catch(Editor.onSubmitError);\n            }\n        }, {\n            key: 'updateOrderTakeProfit',\n            value: function updateOrderTakeProfit(model) {\n                return Editor.updateOrder(model);\n            }\n        }, {\n            key: 'updateOrderStopLoss',\n            value: function updateOrderStopLoss(model) {\n                return Editor.updateOrder(model);\n            }\n        }, {\n            key: 'updateOrder',\n            value: function updateOrder(model) {\n                return Editor.requestPlaceOrder(model, [TAKE_PROFIT, STOP_LOSS]).then(Editor.onSubmitSuccess).catch(Editor.onSubmitError);\n            }\n        }]);\n\n        return Editor;\n    }();\n\n    module.exports = Editor;\n}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/modules/chart/highcharts/trading-editor/editor.js\n// module id = 2119\n// module chunks = 6 68 70 88\n\n//# sourceURL=webpack:///./src/js/modules/chart/highcharts/trading-editor/editor.js?");

/***/ }),

/***/ 2235:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n// EXTERNAL MODULE: ./node_modules/react/react.js\nvar react = __webpack_require__(4);\nvar react_default = /*#__PURE__*/__webpack_require__.n(react);\n\n// EXTERNAL MODULE: ./node_modules/underscore/underscore.js\nvar underscore = __webpack_require__(0);\nvar underscore_default = /*#__PURE__*/__webpack_require__.n(underscore);\n\n// EXTERNAL MODULE: ./src/js/common/localization.js\nvar localization = __webpack_require__(27);\nvar localization_default = /*#__PURE__*/__webpack_require__.n(localization);\n\n// EXTERNAL MODULE: ./node_modules/react-autobind/index.js\nvar react_autobind = __webpack_require__(37);\nvar react_autobind_default = /*#__PURE__*/__webpack_require__.n(react_autobind);\n\n// EXTERNAL MODULE: ./node_modules/backbone/backbone.js\nvar backbone = __webpack_require__(22);\nvar backbone_default = /*#__PURE__*/__webpack_require__.n(backbone);\n\n// EXTERNAL MODULE: ./src/js/core.js\nvar core = __webpack_require__(5);\nvar core_default = /*#__PURE__*/__webpack_require__.n(core);\n\n// EXTERNAL MODULE: ./src/js/store/instruments.js\nvar instruments = __webpack_require__(17);\nvar instruments_default = /*#__PURE__*/__webpack_require__.n(instruments);\n\n// EXTERNAL MODULE: ./src/js/modules/themes/themes.dispatcher.js\nvar themes_dispatcher = __webpack_require__(77);\nvar themes_dispatcher_default = /*#__PURE__*/__webpack_require__.n(themes_dispatcher);\n\n// CONCATENATED MODULE: ./src/js/modules/chart/trading-view/TradingViewSettings.js\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _LOADING_BACKGROUND, _OVERRIDES, _STUDIES_OVERRIDES;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\nvar TradingViewSettings_plain = function plain(obj) {\n    var keyPrefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    var result = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return underscore[\"reduce\"](obj, function (res, val, key) {\n        return underscore[\"isObject\"](val) ? plain(val, keyPrefix + key + '.', res) : (res['' + (keyPrefix + key)] = val, res);\n    }, result);\n};\n\nvar SUPPORTED_RESOLUTIONS = ['1', '5', '15', '30', '60', '120', '240', '1D', '1M', '1W'];\n\nvar RESOLUTION_TO_PERIOD_MAP = {\n    '1': '1m',\n    '5': '5m',\n    '15': '15m',\n    '30': '30m',\n    '60': '1h',\n    '120': '2h',\n    '240': '4h',\n    '1D': '1d',\n    'D': '1d',\n    '1W': '1w',\n    'W': '1w',\n    '1M': '1mn',\n    'M': '1mn'\n};\n\nvar PERIOD_TO_RESOLUTION_MAP = {\n    '1m': '1',\n    '5m': '5',\n    '15m': '15',\n    '30m': '30',\n    '1h': '60',\n    '2h': '120',\n    '4h': '240',\n    '1d': '1D',\n    '1w': '1W',\n    '1mn': '1M'\n};\n\nvar MAX_BARS_COUNT = 5000;\n\nvar FEATURES = {\n    ENABLED: ['side_toolbar_in_fullscreen_mode', 'study_templates', 'charts_auto_save'],\n    DISABLED: ['chart_crosshair_menu', 'chart_property_page_timezone_sessions', 'header_layouttoggle', 'header_saveload', 'header_symbol_search', 'header_undo_redo', 'support_multicharts', 'symbol_info', 'symbol_search_hot_key', 'timezone_menu', 'header_screenshot', 'widget_logo'],\n    MOBILE: {\n        DISABLED: ['left_toolbar', 'header_fullscreen_button', 'header_settings', 'main_series_scale_menu', 'control_bar', 'border_around_the_chart', 'go_to_date']\n    }\n};\n\nvar THEMES = {\n    LIGHT: 'LIGHT',\n    DARK: 'DARK'\n};\n\nvar LOADING_BACKGROUND = (_LOADING_BACKGROUND = {}, _defineProperty(_LOADING_BACKGROUND, THEMES.LIGHT, 'white'), _defineProperty(_LOADING_BACKGROUND, THEMES.DARK, '#272a39'), _LOADING_BACKGROUND);\n\nvar UP_COLOR = 'rgb(30, 205, 147)';\nvar DOWN_COLOR = 'rgb(255, 67, 61)';\nvar MAIN_COLOR = 'rgb(46, 134, 171)';\n\nvar STYLES_OVERRIDES = {\n    mainSeriesProperties: {\n        priceLineColor: '#de67a7',\n\n        // Bars = 0\n        barStyle: {\n            upColor: UP_COLOR,\n            downColor: DOWN_COLOR\n        },\n        // Candles = 1\n        candleStyle: {\n            upColor: UP_COLOR,\n            downColor: DOWN_COLOR,\n            drawBorder: false,\n            borderUpColor: UP_COLOR,\n            borderDownColor: DOWN_COLOR,\n            wickUpColor: UP_COLOR,\n            wickDownColor: DOWN_COLOR\n        },\n        // Line = 2\n        lineStyle: {\n            color: MAIN_COLOR\n        },\n        // Area = 3\n        areaStyle: {\n            color1: '#3d6bb1',\n            color2: '#8aadff',\n            linecolor: '#2e86ab'\n        },\n        // Heikin Ashi = 8\n        haStyle: {\n            upColor: UP_COLOR,\n            downColor: DOWN_COLOR,\n            borderUpColor: UP_COLOR,\n            borderDownColor: DOWN_COLOR,\n            wickUpColor: UP_COLOR,\n            wickDownColor: DOWN_COLOR\n        },\n        // Hollow Candles = 9\n        hollowCandleStyle: {\n            upColor: UP_COLOR,\n            downColor: DOWN_COLOR,\n            borderUpColor: UP_COLOR,\n            borderDownColor: DOWN_COLOR,\n            wickUpColor: UP_COLOR,\n            wickDownColor: DOWN_COLOR\n        },\n        // Renko = 4\n        renkoStyle: {\n            'upColor': UP_COLOR,\n            'downColor': DOWN_COLOR,\n            'borderUpColor': UP_COLOR,\n            'borderDownColor': DOWN_COLOR,\n            'upColorProjection': '#a9dcc3',\n            'downColorProjection': '#f5a6ae',\n            'borderUpColorProjection': '#a9dcc3',\n            'borderDownColorProjection': '#f5a6ae'\n        },\n        // Kagi = 5\n        kagiStyle: {\n            downColor: DOWN_COLOR,\n            upColor: UP_COLOR\n        },\n        // Point&Figure = 6\n        pnfStyle: {\n            downColor: DOWN_COLOR,\n            upColor: UP_COLOR\n        },\n        // Line Break = 7\n        pbStyle: {\n            'upColor': UP_COLOR,\n            'downColor': DOWN_COLOR,\n            'borderUpColor': UP_COLOR,\n            'borderDownColor': DOWN_COLOR,\n            'upColorProjection': '#a9dcc3',\n            'downColorProjection': '#f5a6ae',\n            'borderUpColorProjection': '#a9dcc3',\n            'borderDownColorProjection': '#f5a6ae'\n        },\n        // Baseline = 10\n        baselineStyle: {\n            baselineColor: MAIN_COLOR,\n            topFillColor1: 'rgba(30, 205, 147, 0.1)',\n            topFillColor2: 'rgba(30, 205, 147, 0.1)',\n            bottomFillColor1: 'rgba(255, 67, 61, 0.1)',\n            bottomFillColor2: 'rgba(255, 67, 61, 0.1)',\n            topLineColor: UP_COLOR,\n            bottomLineColor: DOWN_COLOR\n        }\n    },\n    tradingProperties: {\n        lineLength: 95\n    }\n};\n\nvar OVERRIDES = (_OVERRIDES = {}, _defineProperty(_OVERRIDES, THEMES.LIGHT, TradingViewSettings_plain(_extends({\n    editorFontsList: ['Lato', 'Verdana', 'Courier New', 'Times New Roman', 'Arial'],\n    paneProperties: {\n        background: '#ffffff',\n        vertGridProperties: {\n            color: '#d8d8ef'\n        },\n        horzGridProperties: {\n            color: '#d8d8ef'\n        }\n    }\n}, STYLES_OVERRIDES))), _defineProperty(_OVERRIDES, THEMES.DARK, TradingViewSettings_plain(_extends({\n    editorFontsList: ['Lato', 'Verdana', 'Courier New', 'Times New Roman', 'Arial'],\n    paneProperties: {\n        background: '#272a39',\n        vertGridProperties: {\n            color: '#2d3143'\n        },\n        horzGridProperties: {\n            color: '#2d3143'\n        }\n    }\n}, STYLES_OVERRIDES))), _OVERRIDES);\n\nvar STUDIES_OVERRIDES = (_STUDIES_OVERRIDES = {}, _defineProperty(_STUDIES_OVERRIDES, THEMES.DARK, TradingViewSettings_plain({\n    volume: {\n        volume: {\n            color: ['rgba(53, 55, 79, 1)', 'rgba(53, 55, 79, 1)']\n        }\n    }\n})), _defineProperty(_STUDIES_OVERRIDES, THEMES.LIGHT, TradingViewSettings_plain({\n    volume: {\n        volume: {\n            color: ['rgba(217, 231, 242, 1)', 'rgba(217, 231, 242, 1)']\n        }\n    }\n})), _STUDIES_OVERRIDES);\n\nvar _THEMES = {\n    DARK: {\n        'chartProperties': {\n            'scalesProperties': {\n                'textColor': '#D9D9D9',\n                'lineColor': '#787878',\n                'backgroundColor': '#ffffff'\n            },\n            'paneProperties': {\n                'gridProperties': { 'color': '#363c4e' },\n                'background': '#131722',\n                'vertGridProperties': { 'color': '#363c4e' },\n                'horzGridProperties': { 'color': '#363c4e' },\n                'legendProperties': {\n                    'showStudyArguments': true,\n                    'showStudyTitles': true,\n                    'showStudyValues': true,\n                    'showSeriesTitle': true,\n                    'showSeriesOHLC': true,\n                    'showLegend': true\n                }\n            }\n        },\n        'mainSourceProperties': {\n            'candleStyle': {\n                'borderColor': '#378658',\n                'upColor': '#53b987',\n                'wickColor': '#B5B5B8',\n                'wickUpColor': '#336854',\n                'wickDownColor': '#7f323f',\n                'downColor': '#eb4d5c',\n                'borderUpColor': '#53b987',\n                'borderDownColor': '#eb4d5c'\n            },\n            'haStyle': {\n                'borderColor': '#378658',\n                'upColor': '#53b987',\n                'wickColor': '#B5B5B8',\n                'wickUpColor': '#53b987',\n                'wickDownColor': '#eb4d5c',\n                'downColor': '#eb4d5c',\n                'borderUpColor': '#53b987',\n                'borderDownColor': '#eb4d5c'\n            },\n            'barStyle': { 'downColor': '#eb4d5c', 'upColor': '#53b987' },\n            'pnfStyle': {\n                'downColor': '#eb4d5c',\n                'upColor': '#53b987',\n                'upColorProjection': '#336854',\n                'downColorProjection': '#7f323f'\n            },\n            'areaStyle': {\n                'transparency': 50,\n                'color1': '#606090',\n                'color2': '#01F6F5',\n                'linecolor': '#0094FF',\n                'linewidth': 1,\n                'linestyle': 0\n            },\n            'renkoStyle': {\n                'upColor': '#53b987',\n                'downColor': '#eb4d5c',\n                'borderUpColor': '#53b987',\n                'borderDownColor': '#eb4d5c',\n                'upColorProjection': '#336854',\n                'downColorProjection': '#7f323f',\n                'borderUpColorProjection': '#336854',\n                'borderDownColorProjection': '#7f323f',\n                'wickUpColor': '#336854',\n                'wickDownColor': '#7f323f'\n            },\n            'lineStyle': { 'color': '#6FB8F7', 'linewidth': 1, 'linestyle': 0 },\n            'kagiStyle': {\n                'downColor': '#eb4d5c',\n                'upColor': '#53b987',\n                'upColorProjection': '#336854',\n                'downColorProjection': '#7f323f'\n            },\n            'pbStyle': {\n                'upColor': '#53b987',\n                'downColor': '#eb4d5c',\n                'borderUpColor': '#53b987',\n                'borderDownColor': '#eb4d5c',\n                'upColorProjection': '#336854',\n                'downColorProjection': '#7f323f',\n                'borderUpColorProjection': '#336854',\n                'borderDownColorProjection': '#7f323f'\n            },\n            'hollowCandleStyle': {\n                'borderColor': '#378658',\n                'upColor': '#53b987',\n                'wickColor': '#B5B5B8',\n                'wickUpColor': '#336854',\n                'wickDownColor': '#7f323f',\n                'downColor': '#eb4d5c',\n                'borderUpColor': '#53b987',\n                'borderDownColor': '#eb4d5c'\n            }\n        }\n    },\n    LIGHT: {\n        'chartProperties': {\n            'scalesProperties': {\n                'textColor': '#555',\n                'lineColor': '#555',\n                'backgroundColor': '#ffffff'\n            }, 'paneProperties': { 'gridProperties': { 'color': '#e1ecf2' }, 'background': '#ffffff' }\n        },\n        'mainSourceProperties': {\n            'candleStyle': {\n                'borderColor': '#378658',\n                'upColor': '#53b987',\n                'wickColor': '#737375',\n                'wickUpColor': '#a9dcc3',\n                'wickDownColor': '#f5a6ae',\n                'downColor': '#eb4d5c',\n                'borderUpColor': '#53b987',\n                'borderDownColor': '#eb4d5c'\n            },\n            'haStyle': {\n                'borderColor': '#378658',\n                'upColor': '#53b987',\n                'wickColor': '#737375',\n                'wickUpColor': '#53b987',\n                'wickDownColor': '#eb4d5c',\n                'downColor': '#eb4d5c',\n                'borderUpColor': '#53b987',\n                'borderDownColor': '#eb4d5c'\n            },\n            'barStyle': { 'downColor': '#eb4d5c', 'upColor': '#53b987' },\n            'pnfStyle': {\n                'downColor': '#eb4d5c',\n                'upColor': '#53b987',\n                'upColorProjection': '#a9dcc3',\n                'downColorProjection': '#f5a6ae'\n            },\n            'areaStyle': {\n                'transparency': 50,\n                'color1': '#606090',\n                'color2': '#01F6F5',\n                'linecolor': '#0094FF',\n                'linewidth': 1,\n                'linestyle': 0\n            },\n            'renkoStyle': {\n                'upColor': '#53b987',\n                'downColor': '#eb4d5c',\n                'borderUpColor': '#53b987',\n                'borderDownColor': '#eb4d5c',\n                'upColorProjection': '#a9dcc3',\n                'downColorProjection': '#f5a6ae',\n                'borderUpColorProjection': '#a9dcc3',\n                'borderDownColorProjection': '#f5a6ae',\n                'wickUpColor': '#a9dcc3',\n                'wickDownColor': '#f5a6ae'\n            },\n            'lineStyle': { 'color': '#0303F7', 'linewidth': 1, 'linestyle': 0 },\n            'kagiStyle': {\n                'downColor': '#eb4d5c',\n                'upColor': '#53b987',\n                'upColorProjection': '#a9dcc3',\n                'downColorProjection': '#f5a6ae'\n            },\n            'pbStyle': {\n                'upColor': '#53b987',\n                'downColor': '#eb4d5c',\n                'borderUpColor': '#53b987',\n                'borderDownColor': '#eb4d5c',\n                'upColorProjection': '#a9dcc3',\n                'downColorProjection': '#f5a6ae',\n                'borderUpColorProjection': '#a9dcc3',\n                'borderDownColorProjection': '#f5a6ae'\n            }\n        }\n    }\n};\n\nvar MEASURER_ICON_SELECTOR = '.wrap-1h7U5nKd- > .scrollWrap-3gtPS0Fe-.noScrollBar-ieMwbfur- > div > div > div:nth-child(2) > div:nth-child(1) > div > span > svg';\nvar TOGGLE_BUTTON_ICON_SELECTOR = '.toggleButton-13QgefpG-.apply-common-tooltip.common-tooltip-vertical svg';\nvar TOGGLE_BUTTON_ICON_BG_SELECTOR = '.background-Q1Fcmxly-';\nvar TOGGLE_BUTTON_ICON_ARROW_SELECTOR = '.arrow-WcYWFXUn-';\n\nvar fixUI = function fixUI(tvDocument) {\n    var measurerIcon = tvDocument.querySelector(MEASURER_ICON_SELECTOR);\n\n    if (measurerIcon) {\n        measurerIcon.setAttribute('viewBox', '0 0 28 28');\n    }\n\n    var sidebarToggleButton = tvDocument.querySelector(TOGGLE_BUTTON_ICON_SELECTOR);\n\n    if (sidebarToggleButton) {\n        sidebarToggleButton.setAttribute('viewBox', '0 0 8 60');\n        sidebarToggleButton.setAttribute('width', '8');\n        sidebarToggleButton.setAttribute('height', '60');\n\n        sidebarToggleButton.querySelector(TOGGLE_BUTTON_ICON_BG_SELECTOR).setAttribute('d', 'M 0 0 h 8 v 60 h -8 z');\n        sidebarToggleButton.querySelector(TOGGLE_BUTTON_ICON_ARROW_SELECTOR).setAttribute('d', 'M 2,30 6,28 6,32 z');\n    }\n};\n\nvar TOOLTIP_BUTTON_SELECTOR = '.pane-legend > .pane-legend-line.pane-legend-wrap.main:not(.expand-line) > a';\n\nvar collapseTooltip = function collapseTooltip(tvDocument) {\n    var $collapseLegendButton = tvDocument.querySelector(TOOLTIP_BUTTON_SELECTOR);\n\n    if ($collapseLegendButton) {\n        $collapseLegendButton.click();\n    }\n};\n// CONCATENATED MODULE: ./src/js/modules/chart/trading-view/BackboneEventsListener.js\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\n\n\n\n\n\nvar BackboneEventsListener_BackboneEventsListener = function () {\n    _createClass(BackboneEventsListener, null, [{\n        key: 'create',\n        value: function create(callback) {\n            return new BackboneEventsListener(callback);\n        }\n    }, {\n        key: 'core',\n        get: function get() {\n            return core_default.a;\n        }\n    }]);\n\n    function BackboneEventsListener(callback) {\n        _classCallCheck(this, BackboneEventsListener);\n\n        this._callback = callback;\n\n        underscore[\"extend\"](this, backbone[\"Events\"]);\n\n        this.listenTo(core_default.a, 'ui:change-theme', this.themeChanged.bind(this));\n        this.listenTo(core_default.a, 'ui:instruments:instrument-selected', this.instrumentRowSelected.bind(this));\n        this.listenTo(core_default.a, 'ui:instruments:instrument-subrow-selected', this.instrumentSubrowSelected.bind(this));\n    }\n\n    _createClass(BackboneEventsListener, [{\n        key: 'themeChanged',\n        value: function themeChanged() {\n            if (this._callback.onThemeChanged) {\n                var name = themes_dispatcher[\"isLightTheme\"]() ? THEMES.LIGHT : THEMES.DARK;\n\n                this._callback.onThemeChanged(name);\n            }\n        }\n    }, {\n        key: 'instrumentRowSelected',\n        value: function instrumentRowSelected(symbol, model) {\n            var tradesConfig = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n                openPositionsSelected: true,\n                ordersSelected: true,\n                selectedSubRowsIds: []\n            };\n\n            var instrument = instruments_default.a.getInstrumentBySymbol(symbol);\n\n            instrument && this._callback.onInstrumentRowSelected(symbol, instrument, {\n                showTrades: true,\n                showAllOpenPositions: tradesConfig.openPositionsSelected,\n                showAllOrders: tradesConfig.ordersSelected,\n                visibleTradesIds: tradesConfig.selectedSubRowsIds\n            });\n        }\n    }, {\n        key: 'instrumentSubrowSelected',\n        value: function instrumentSubrowSelected(symbol, model) {\n            var tradesConfig = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n                openPositionsSelected: false,\n                ordersSelected: false,\n                selectedSubRowsIds: []\n            };\n\n            var instrument = instruments_default.a.getInstrumentBySymbol(symbol);\n\n            instrument && this._callback.onInstrumentSubrowSelected(symbol, instrument, {\n                showTrades: true,\n                showAllOpenPositions: tradesConfig.openPositionsSelected,\n                showAllOrders: tradesConfig.ordersSelected,\n                visibleTradesIds: tradesConfig.selectedSubRowsIds\n            });\n        }\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            this.stopListening();\n        }\n    }]);\n\n    return BackboneEventsListener;\n}();\n\n/* harmony default export */ var trading_view_BackboneEventsListener = (BackboneEventsListener_BackboneEventsListener);\n// EXTERNAL MODULE: ./node_modules/react-classset/classSet.js\nvar classSet = __webpack_require__(14);\nvar classSet_default = /*#__PURE__*/__webpack_require__.n(classSet);\n\n// EXTERNAL MODULE: ./src/vendors/device.js\nvar device = __webpack_require__(18);\nvar device_default = /*#__PURE__*/__webpack_require__.n(device);\n\n// EXTERNAL MODULE: ./src/js/modules/form/components/dropdown/Dropdown.js\nvar Dropdown = __webpack_require__(139);\n\n// EXTERNAL MODULE: ./src/js/store/settings.js\nvar settings = __webpack_require__(12);\nvar settings_default = /*#__PURE__*/__webpack_require__.n(settings);\n\n// EXTERNAL MODULE: ./src/js/common/sha1.js\nvar sha1 = __webpack_require__(950);\n\n// EXTERNAL MODULE: ./src/js/modules/subscription/subscription.js\nvar subscription_subscription = __webpack_require__(60);\nvar subscription_default = /*#__PURE__*/__webpack_require__.n(subscription_subscription);\n\n// EXTERNAL MODULE: ./src/js/modules/chart/chart.subscription.js\nvar chart_subscription = __webpack_require__(957);\nvar chart_subscription_default = /*#__PURE__*/__webpack_require__.n(chart_subscription);\n\n// EXTERNAL MODULE: ./src/js/modules/search/search.model.js\nvar search_model = __webpack_require__(966);\nvar search_model_default = /*#__PURE__*/__webpack_require__.n(search_model);\n\n// CONCATENATED MODULE: ./src/js/modules/chart/trading-view/TradingViewDatafeed.js\nvar TradingViewDatafeed__createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction TradingViewDatafeed__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\n\n\n\n\n\n\nvar CANDLE_TO_BAR_TRANSFORMER = function CANDLE_TO_BAR_TRANSFORMER(_ref) {\n    var time = _ref.timestamp,\n        close = _ref.close,\n        open = _ref.open,\n        high = _ref.high,\n        low = _ref.low,\n        volume = _ref.volume;\n    return {\n        time: time,\n        close: close,\n        open: open,\n        high: high,\n        low: low,\n        volume: volume\n    };\n};\n\nvar EventListener = underscore[\"extend\"]({}, backbone[\"Events\"]);\n\nvar TradingViewDatafeed_TradingViewDatafeed = function () {\n    TradingViewDatafeed__createClass(TradingViewDatafeed, null, [{\n        key: 'createId',\n        value: function createId(symbol, resolution) {\n            return symbol + '_' + resolution;\n        }\n    }]);\n\n    function TradingViewDatafeed() {\n        TradingViewDatafeed__classCallCheck(this, TradingViewDatafeed);\n\n        this._subscribtions = {};\n    }\n\n    //  TV comment: `onReady` should return result asynchronously. Use `setTimeout` with 0 interval to execute the callback function.\n\n\n    TradingViewDatafeed__createClass(TradingViewDatafeed, [{\n        key: 'onReady',\n        value: function onReady(callback) {\n            setTimeout(function () {\n                callback({\n                    supported_resolutions: SUPPORTED_RESOLUTIONS\n                });\n            }, 0);\n        }\n\n        // TV comment: `resolveSymbol` should return result asynchronously. Use `setTimeout` with 0 interval to execute the callback function.\n\n    }, {\n        key: 'resolveSymbol',\n        value: function resolveSymbol(symbol, onResolve, onError) {\n            setTimeout(function () {\n                var instrument = instruments_default.a.getInstrumentBySymbol(symbol);\n\n                if (instrument) {\n                    if (instrument.getPrecision()) {\n                        TradingViewDatafeed.doResolve(onResolve, instrument);\n                    } else {\n                        EventListener.listenToOnce(instrument, 'change:precision', function () {\n                            subscription_default.a.remove([symbol]);\n                            TradingViewDatafeed.doResolve(onResolve, instrument);\n                        });\n                        subscription_default.a.add([symbol]);\n                    }\n                } else {\n                    onError('Instrument ' + symbol + ' not found ');\n                }\n            }, 0);\n        }\n    }, {\n        key: 'getBars',\n        value: function getBars(symbolInfo, resolution, rangeStartDate, rangeEndDate, onResult, onError, firstRequest) {\n            if (firstRequest) {\n                var id = TradingViewDatafeed.createId(symbolInfo.ticker, resolution);\n\n                this._subscribtions[id] = TradingViewDatafeed._subscribe(symbolInfo.ticker, resolution).on({\n                    load: function load(candles) {\n                        onResult(underscore[\"sortBy\"](underscore[\"map\"](candles, CANDLE_TO_BAR_TRANSFORMER), 'time'), { noData: false });\n                    },\n                    timeout: function timeout() {\n                        onResult([], { noData: true });\n                    }\n                });\n            } else {\n                setTimeout(function () {\n                    onResult([], { noData: true });\n                }, 0);\n            }\n        }\n    }, {\n        key: 'subscribeBars',\n        value: function subscribeBars(symbolInfo, resolution, onUpdate, subscriberUID, onResetCacheNeededCallback) {\n            if (this._subscribtions[subscriberUID]) {\n                this._subscribtions[subscriberUID].on('update', function (candles) {\n                    underscore[\"each\"](candles, function (candle) {\n                        return onUpdate(CANDLE_TO_BAR_TRANSFORMER(candle));\n                    });\n                });\n            }\n        }\n    }, {\n        key: 'unsubscribeBars',\n        value: function unsubscribeBars(subscriberUID) {\n            if (this._subscribtions[subscriberUID]) {\n                this._subscribtions[subscriberUID].stop();\n            }\n        }\n    }, {\n        key: 'searchSymbols',\n        value: function searchSymbols(userInput, exchange, symbolType, onResultReadyCallback) {\n            if (!this._searchModel) {\n                this._searchModel = new search_model_default.a();\n            }\n\n            if (userInput.length >= 2) {\n                onResultReadyCallback(underscore[\"map\"](this._searchModel.search(userInput), function (instrument) {\n                    return {\n                        symbol: instrument.getSymbol(),\n                        full_name: instrument.getSymbol(),\n                        description: instrument.getDescription()\n                    };\n                }));\n            }\n        }\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            var _this = this;\n\n            underscore[\"each\"](underscore[\"keys\"](this._subscribtions), function (id) {\n                return _this.unsubscribeBars(id);\n            });\n        }\n    }, {\n        key: 'getSubscription',\n        value: function getSubscription(symbol, resolution) {\n            return this._subscribtions[TradingViewDatafeed.createId(symbol, resolution)];\n        }\n    }], [{\n        key: 'doResolve',\n        value: function doResolve(onResolve, instrument) {\n            onResolve({\n                name: instrument.getSymbol(),\n                description: instrument.getName(),\n                has_intraday: true,\n                has_daily: true,\n                has_weekly_and_monthly: true,\n                pricescale: Math.pow(10, instrument.getPrecision()),\n                minmov: 1\n            });\n        }\n    }, {\n        key: '_subscribe',\n        value: function _subscribe(symbol, resolution) {\n            return chart_subscription_default.a.create({\n                symbol: symbol,\n                period: RESOLUTION_TO_PERIOD_MAP[resolution],\n                maxBarsCount: MAX_BARS_COUNT\n            }).start();\n        }\n    }]);\n\n    return TradingViewDatafeed;\n}();\n\n/* harmony default export */ var trading_view_TradingViewDatafeed = (TradingViewDatafeed_TradingViewDatafeed);\n// EXTERNAL MODULE: ./src/js/modules/user/user.model.js\nvar user_model = __webpack_require__(10);\nvar user_model_default = /*#__PURE__*/__webpack_require__.n(user_model);\n\n// CONCATENATED MODULE: ./src/js/modules/chart/trading-view/TradingViewTimezone.js\nvar TradingViewTimezone__createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction TradingViewTimezone__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar TIMEZONES = {\n    'America/New_York': {\n        time: [-2717668562, -1633298400, -1615154400, -1601848800, -1583704800, -1570399200, -1551650400, -1536530400, -1523224800, -1504476e3, -1491775200, -1473026400, -1459720800, -1441576800, -1428271200, -1410127200, -1396821600, -1378677600, -1365372e3, -1347228e3, -1333922400, -1315173600, -1301868e3, -1283724e3, -1270418400, -1252274400, -1238968800, -1220824800, -1207519200, -1189375200, -1176069600, -1157320800, -114462e4, -1125871200, -1112565600, -1094421600, -1081116e3, -1062972e3, -1049666400, -1031522400, -1018216800, -1000072800, -986767200, -968018400, -955317600, -936568800, -923263200, -905119200, -891813600, -880236e3, -76941e4, -765410400, -747266400, -733960800, -715816800, -702511200, -684367200, -671061600, -652917600, -639612e3, -620863200, -608162400, -589413600, -576108e3, -557964e3, -544658400, -526514400, -513208800, -495064800, -481759200, -463615200, -447285600, -431560800, -415836e3, -400111200, -384386400, -368661600, -352936800, -337212e3, -321487200, -305762400, -289432800, -273708e3, -257983200, -242258400, -226533600, -210808800, -195084e3, -179359200, -163634400, -147909600, -13158e4, -11646e4, -100130400, -84405600, -68680800, -52956e3, -37231200, -21506400, -5781600, 9943200, 25668e3, 41392800, 57722400, 73447200, 89172e3, 104896800, 120621600, 126669600, 152071200, 162352800, 183520800, 199245600, 215575200, 230695200, 247024800, 262749600, 278474400, 294199200, 309924e3, 325648800, 341373600, 357098400, 372823200, 388548e3, 404877600, 419997600, 436327200, 452052e3, 467776800, 483501600, 499226400, 514951200, 530676e3, 544586400, 562125600, 576036e3, 59418e4, 607485600, 625629600, 638935200, 657079200, 670989600, 688528800, 702439200, 719978400, 733888800, 752032800, 765338400, 783482400, 796788e3, 814932e3, 828842400, 846381600, 860292e3, 877831200, 891741600, 909280800, 923191200, 941335200, 954640800, 972784800, 986090400, 1004234400, 1018144800, 1035684e3, 1049594400, 1067133600, 1081044e3, 1099188e3, 1112493600, 1130637600, 1143943200, 1162087200, 1173578400, 1194141600, 1205028e3, 1225591200, 1236477600, 1257040800, 1268532e3, 1289095200, 1299981600, 1320544800, 1331431200, 1351994400, 1362880800, 1383444e3, 1394330400, 1414893600, 142578e4, 1446343200, 1457834400, 1478397600, 1489284e3, 1509847200, 1520733600, 1541296800, 1552183200, 1572746400, 1583632800, 1604196e3, 1615687200, 1636250400, 1647136800, 16677e5, 1678586400, 1699149600, 1710036e3, 1730599200, 1741485600, 1762048800, 1772935200, 1793498400, 1804989600, 1825552800, 1836439200, 1857002400, 1867888800, 1888452e3, 1899338400, 1919901600, 1930788e3],\n        offset: [-17762, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3]\n    },\n    'America/Los_Angeles': {\n        time: [-2717668378, -1633298400, -1615154400, -1601848800, -1583704800, -880236e3, -769420800, -765410400, -687995940, -662680800, -620866800, -608162400, -589417200, -576108e3, -557967600, -544658400, -526518e3, -513208800, -495068400, -481759200, -463618800, -450309600, -431564400, -418255200, -400114800, -386805600, -368665200, -355356e3, -337215600, -323906400, -305766e3, -292456800, -273711600, -261007200, -242262e3, -226533600, -210812400, -195084e3, -179362800, -163634400, -147913200, -13158e4, -116463600, -100130400, -84405600, -68680800, -52956e3, -37231200, -21506400, -5781600, 9943200, 25668e3, 41392800, 57722400, 73447200, 89172e3, 104896800, 120621600, 126669600, 152071200, 162352800, 183520800, 199245600, 215575200, 230695200, 247024800, 262749600, 278474400, 294199200, 309924e3, 325648800, 341373600, 357098400, 372823200, 388548e3, 404877600, 419997600, 436327200, 452052e3, 467776800, 483501600, 499226400, 514951200, 530676e3, 544586400, 562125600, 576036e3, 59418e4, 607485600, 625629600, 638935200, 657079200, 670989600, 688528800, 702439200, 719978400, 733888800, 752032800, 765338400, 783482400, 796788e3, 814932e3, 828842400, 846381600, 860292e3, 877831200, 891741600, 909280800, 923191200, 941335200, 954640800, 972784800, 986090400, 1004234400, 1018144800, 1035684e3, 1049594400, 1067133600, 1081044e3, 1099188e3, 1112493600, 1130637600, 1143943200, 1162087200, 1173578400, 1194141600, 1205028e3, 1225591200, 1236477600, 1257040800, 1268532e3, 1289095200, 1299981600, 1320544800, 1331431200, 1351994400, 1362880800, 1383444e3, 1394330400, 1414893600, 142578e4, 1446343200, 1457834400, 1478397600, 1489284e3, 1509847200, 1520733600, 1541296800, 1552183200, 1572746400, 1583632800, 1604196e3, 1615687200, 1636250400, 1647136800, 16677e5, 1678586400, 1699149600, 1710036e3, 1730599200, 1741485600, 1762048800, 1772935200, 1793498400, 1804989600, 1825552800, 1836439200, 1857002400, 1867888800, 1888452e3, 1899338400, 1919901600, 1930788e3],\n        offsetn    },\n    'America/Chicago': {\n        time: [-2717668236, -1633298400, -1615154400, -1601848800, -1583704800, -1563746400, -1551650400, -1538949600, -1520200800, -1504476e3, -1491775200, -1473026400, -1459720800, -1441576800, -1428271200, -1410127200, -1396821600, -1378677600, -1365372e3, -1347228e3, -1333922400, -1315173600, -1301868e3, -1283724e3, -1270418400, -1252274400, -1238968800, -1220824800, -1207519200, -1189375200, -1176069600, -1157320800, -114462e4, -1125871200, -1112565600, -1094421600, -1081116e3, -1067810400, -1045432800, -1031522400, -1018216800, -1000072800, -986767200, -968018400, -955317600, -936568800, -923263200, -905119200, -891813600, -880236e3, -769413600, -765410400, -747266400, -733960800, -715816800, -702511200, -684367200, -671061600, -652917600, -639612e3, -620863200, -608162400, -589413600, -576108e3, -557964e3, -544658400, -526514400, -513208800, -495064800, -481759200, -463615200, -447285600, -431560800, -415836e3, -400111200, -384386400, -368661600, -352936800, -337212e3, -321487200, -305762400, -289432800, -273708e3, -257983200, -242258400, -226533600, -210808800, -195084e3, -179359200, -163634400, -147909600, -13158e4, -11646e4, -100130400, -84405600, -68680800, -52956e3, -37231200, -21506400, -5781600, 9943200, 25668e3, 41392800, 57722400, 73447200, 89172e3, 104896800, 120621600, 126669600, 152071200, 162352800, 183520800, 199245600, 215575200, 230695200, 247024800, 262749600, 278474400, 294199200, 309924e3, 325648800, 341373600, 357098400, 372823200, 388548e3, 404877600, 419997600, 436327200, 452052e3, 467776800, 483501600, 499226400, 514951200, 530676e3, 544586400, 562125600, 576036e3, 59418e4, 607485600, 625629600, 638935200, 657079200, 670989600, 688528800, 702439200, 719978400, 733888800, 752032800, 765338400, 783482400, 796788e3, 814932e3, 828842400, 846381600, 860292e3, 877831200, 891741600, 909280800, 923191200, 941335200, 954640800, 972784800, 986090400, 1004234400, 1018144800, 1035684e3, 1049594400, 1067133600, 1081044e3, 1099188e3, 1112493600, 1130637600, 1143943200, 1162087200, 1173578400, 1194141600, 1205028e3, 1225591200, 1236477600, 1257040800, 1268532e3, 1289095200, 1299981600, 1320544800, 1331431200, 1351994400, 1362880800, 1383444e3, 1394330400, 1414893600, 142578e4, 1446343200, 1457834400, 1478397600, 1489284e3, 1509847200, 1520733600, 1541296800, 1552183200, 1572746400, 1583632800, 1604196e3, 1615687200, 1636250400, 1647136800, 16677e5, 1678586400, 1699149600, 1710036e3, 1730599200, 1741485600, 1762048800, 1772935200, 1793498400, 1804989600, 1825552800, 1836439200, 1857002400, 1867888800, 1888452e3, 1899338400, 1919901600, 1930788e3],\n        offset: [-21036, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600]\n    },\n    'America/Phoenix': {\n        time: [-2717670498, -1633298400, -1615154400, -1601848800, -1583704800, -880236e3, -820540740, -812678340, -796867140, -84405600, -68680800, 1924966800],\n        offset: [-26898, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200]\n    },\n    'America/Toronto': {\n        time: [-2366755200, -1632088800, -1615154400, -1601771400, -1583712e3, -1567375200, -1554681600, -1534716e3, -1524088800, -1503266400, -149238e4, -1471816800, -1460930400, -1440972e3, -1428876e3, -1409522400, -1397426400, -1378072800, -1365976800, -1346623200, -1333922400, -1315173600, -1301868e3, -1283724e3, -1270418400, -1252274400, -1238968800, -1220824800, -1207519200, -1188770400, -1176069600, -1157320800, -1144015200, -1125871200, -1112565600, -1094421600, -1081116e3, -1062972e3, -1049666400, -1031522400, -1018216800, -1000072800, -986767200, -968018400, -955317600, -936568800, -880232400, -76941e4, -765410400, -747266400, -733960800, -715824e3, -702518400, -684374400, -671068800, -652924800, -634176e3, -620863200, -602719200, -589413600, -576108e3, -557964e3, -544658400, -526514400, -513208800, -495064800, -481759200, -463615200, -450309600, -431560800, -418255200, -400111200, -384386400, -368661600, -352936800, -337212e3, -321487200, -305762400, -289432800, -273708e3, -257983200, -242258400, -226533600, -210808800, -195084e3, -179359200, -163634400, -147909600, -13158e4, -11646e4, -100130400, -84405600, -68680800, -52956e3, -37231200, -21506400, -5781600, 9943200, 25668e3, 41392800, 57722400, 73447200, 89172e3, 104896800, 120621600, 136346400, 152071200, 167796e3, 183520800, 199245600, 215575200, 230695200, 247024800, 262749600, 278474400, 294199200, 309924e3, 325648800, 341373600, 357098400, 372823200, 388548e3, 404877600, 419997600, 436327200, 452052e3, 467776800, 483501600, 499226400, 514951200, 530676e3, 544586400, 562125600, 576036e3, 59418e4, 607485600, 625629600, 638935200, 657079200, 670989600, 688528800, 702439200, 719978400, 733888800, 752032800, 765338400, 783482400, 796788e3, 814932e3, 828842400, 846381600, 860292e3, 877831200, 891741600, 909280800, 923191200, 941335200, 954640800, 972784800, 986090400, 1004234400, 1018144800, 1035684e3, 1049594400, 1067133600, 1081044e3, 1099188e3, 1112493600, 1130637600, 1143943200, 1162087200, 1173578400, 1194141600, 1205028e3, 1225591200, 1236477600, 1257040800, 1268532e3, 1289095200, 1299981600, 1320544800, 1331431200, 1351994400, 1362880800, 1383444e3, 1394330400, 1414893600, 142578e4, 1446343200, 1457834400, 1478397600, 1489284e3, 1509847200, 1520733600, 1541296800, 1552183200, 1572746400, 1583632800, 1604196e3, 1615687200, 1636250400, 1647136800, 16677e5, 1678586400, 1699149600, 1710036e3, 1730599200, 1741485600, 1762048800, 1772935200, 1793498400, 1804989600, 1825552800, 1836439200, 1857002400, 1867888800, 1888452e3, 1899338400, 1919901600, 1930788e3],\n        offset: [-19052, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -14400, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3, -14400, -18e3]\n    },\n    'America/Vancouver': {\n        time: [-2713910400, -1632088800, -1615154400, -880236e3, -769420800, -765410400, -747266400, -732751200, -715816800, -702511200, -684367200, -671061600, -652917600, -639612e3, -620863200, -608162400, -589413600, -576108e3, -557964e3, -544658400, -526514400, -513208800, -495064800, -481759200, -463615200, -450309600, -431560800, -418255200, -400111200, -386805600, -368661600, -355356e3, -337212e3, -323906400, -305762400, -292456800, -273708e3, -261007200, -242258400, -226533600, -210808800, -195084e3, -179359200, -163634400, -147909600, -13158e4, -11646e4, -100130400, -84405600, -68680800, -52956e3, -37231200, -21506400, -5781600, 9943200, 25668e3, 41392800, 57722400, 73447200, 89172e3, 104896800, 120621600, 136346400, 152071200, 167796e3, 183520800, 199245600, 215575200, 230695200, 247024800, 262749600, 278474400, 294199200, 309924e3, 325648800, 341373600, 357098400, 372823200, 388548e3, 404877600, 419997600, 436327200, 452052e3, 467776800, 483501600, 499226400, 514951200, 530676e3, 544586400, 562125600, 576036e3, 59418e4, 607485600, 625629600, 638935200, 657079200, 670989600, 688528800, 702439200, 719978400, 733888800, 752032800, 765338400, 783482400, 796788e3, 814932e3, 828842400, 846381600, 860292e3, 877831200, 891741600, 909280800, 923191200, 941335200, 954640800, 972784800, 986090400, 1004234400, 1018144800, 1035684e3, 1049594400, 1067133600, 1081044e3, 1099188e3, 1112493600, 1130637600, 1143943200, 1162087200, 1173578400, 1194141600, 1205028e3, 1225591200, 1236477600, 1257040800, 1268532e3, 1289095200, 1299981600, 1320544800, 1331431200, 1351994400, 1362880800, 1383444e3, 1394330400, 1414893600, 142578e4, 1446343200, 1457834400, 1478397600, 1489284e3, 1509847200, 1520733600, 1541296800, 1552183200, 1572746400, 1583632800, 1604196e3, 1615687200, 1636250400, 1647136800, 16677e5, 1678586400, 1699149600, 1710036e3, 1730599200, 1741485600, 1762048800, 1772935200, 1793498400, 1804989600, 1825552800, 1836439200, 1857002400, 1867888800, 1888452e3, 1899338400, 1919901600, 1930788e3],\n        offsetn    },\n    'America/Argentina/Buenos_Aires': {\n        time: [-2372112e3, -1567468800, -1233446400, -1222992e3, -1205971200, -1194048e3, -117288e4, -1162512e3, -1141344e3, -1130976e3, -1109808e3, -109944e4, -1078272e3, -1067817600, -1046649600, -1036281600, -1015113600, -1004745600, -983577600, -973209600, -952041600, -941587200, -931046400, -900892800, -890352e3, -83376e4, -82728e4, -752284800, -733795200, -197337600, -190857600, -184204800, -164505600, -152668800, -132969600, -121132800, -101433600, -86832e3, -71107200, -54777600, -39052800, -23328e3, -7603200, 128131200, 136598400, 596937600, 605059200, 624412800, 636508800, 656467200, 667958400, 687916800, 699408e3, 719366400, 731462400, 938908800, 952041600, 1198972800, 1205625600, 1224374400, 1237075200, 1924981200],\n        offset: [-14028, -15408, -14400, -10800, -14400, -10800, -14400, -10800, -14400, -10800, -14400, -10800, -14400, -10800, -14400, -10800, -14400, -10800, -14400, -10800, -14400, -10800, -14400, -10800, -14400, -10800, -14400, -10800, -14400, -10800, -14400, -10800, -14400, -10800, -14400, -10800, -14400, -10800, -14400, -10800, -14400, -10800, -14400, -10800, -7200, -10800, -7200, -10800, -7200, -10800, -7200, -10800, -7200, -10800, -7200, -10800, -10800, -10800, -7200, -10800, -7200, -10800]\n    },\n    'America/El_Salvador': {\n        time: [-1546300800, 546998400, 559699200, 578448e3, 591148800, 1924970400],\n        offset: [-21408, -21600, -18e3, -21600, -18e3, -21600]\n    },\n    'America/Sao_Paulo': {\n        time: [-1767225600, -1206968400, -1191369600, -1175385600, -1159833600, -633830400, -622076400, -602294400, -59184e4, -570758400, -560217600, -539136e3, -53136e4, -195436800, -184204800, -155174400, -150076800, -128908800, -121132800, -99964800, -89596800, -68428800, -57974400, 499737600, 511228800, 530582400, 540259200, 562118400, 571190400, 592963200, 602035200, 624412800, 634694400, 656467200, 666748800, 687916800, 697593600, 719971200, 728438400, 750816e3, 761702400, 782265600, 793152e3, 813715200, 823996800, 84456e4, 856051200, 876096e3, 888710400, 908064e3, 919555200, 938908800, 951609600, 970963200, 982454400, 1003017600, 1013904e3, 1036281600, 1045353600, 1066521600, 1076803200, 1099353600, 1108857600, 1129420800, 1140307200, 1162684800, 1172361600, 119232e4, 1203206400, 1224374400, 1234656e3, 1255824e3, 1266710400, 1287273600, 129816e4, 1318723200, 1330214400, 1350777600, 1361059200, 1382227200, 1392508800, 1413676800, 1424563200, 1445126400, 1456012800, 1476576e3, 1487462400, 1508025600, 1518912e3, 154008e4, 1550361600, 1571529600, 1581811200, 1602979200, 1613865600, 1634428800, 1645315200, 1665878400, 1677369600, 1697328e3, 1708214400, 1729382400, 1739664e3, 1760832e3, 1771718400, 1792281600, 1803168e3, 1823731200, 1834617600, 1855180800, 1866067200, 1887235200, 1897516800, 1918684800, 1928966400],\n        offset: [-11188, -10800, -7200, -10800, -7200, -10800, -7200, -10800, -7200, -10800, -7200, -10800, -7200, -10800, -7200, -10800, -7200, -10800, -7200, -10800, -7200, -10800, -7200, -10800, -7200, -10800, -7200, -10800, -7200, -10800, -7200, -10800, -7200, -10800, -7200, -10800, -7200, -10800, -7200, -10800, -7200, -10800, -7200, -10800, -7200, -10800, -7200, -10800, -7200, -10800, -7200, -10800, -7200, -10800, -7200, -10800, -7200, -10800, -7200, -10800, -7200, -10800, -7200, -10800, -7200, -10800, -7200, -10800, -7200, -10800, -7200, -10800, -7200, -10800, -7200, -10800, -7200, -10800, -7200, -10800, -7200, -10800, -7200, -10800, -7200, -10800, -7200, -10800, -7200, -10800, -7200, -10800, -7200, -10800, -7200, -10800, -7200, -10800, -7200, -10800, -7200, -10800, -7200, -10800, -7200, -10800, -7200, -10800, -7200, -10800, -7200, -10800, -7200, -10800, -7200]\n    },\n    'America/Bogota': {\n        time: [-2707689600, -1739059200, 704851200, 733881600, 1924974e3],\n        offset: [-17776, -17776, -18e3, -14400, -18e3]\n    },\n    'America/Caracas': {\n        time: [-2524521600, -1826755200, -157766400, 1197169200, 1462069800, 1924977600],\n        offset: [-16064, -16060, -16200, -14400, -16200, -14400]\n    },\n    'Europe/Moscow': {\n        time: [-2840140800, -1688256e3, -165681e4, -1641340800, -1627956e3, -1618700400, -1596416400, -1593804521, -1589846400, -1542416400, -1539478800, -1525305600, -1522713600, -1491177600, -1247529600, 354931200, 370742400, 386467200, 402278400, 418003200, 433814400, 449625600, 465361200, 481082400, 496810800, 512532e3, 528260400, 543981600, 55971e4, 575431200, 591159600, 606880800, 622609200, 638330400, 654663600, 670384800, 686113200, 695786400, 701834400, 717562800, 733284e3, 749012400, 764733600, 780462e3, 796183200, 811911600, 828237600, 846385200, 859687200, 877834800, 891136800, 909284400, 922586400, 941338800, 954036e3, 972788400, 985485600, 1004238e3, 101754e4, 1035687600, 1048989600, 1067137200, 1080439200, 1099191600, 1111888800, 1130641200, 1143338400, 1162090800, 1174788e3, 1193540400, 1206842400, 122499e4, 1238292e3, 1256439600, 1269741600, 1288494e3, 1301191200, 1414288800, 1925002800],\n        offset: [9017, 9017, 9079, 12679, 9079, 16279, 12679, 16279, 14400, 10800, 14400, 18e3, 14400, 10800, 7200, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 10800, 7200, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800]\n    },\n    'Europe/Athens': {\n        time: [-2344636800, -1686095940, -1182988800, -1178150400, -906854400, -904867200, -85725e4, -844473600, -828230400, -812419200, -552355200, -541641600, 166492800, 186195600, 198036e3, 213764400, 228880800, 244090800, 260330400, 275457600, 291805200, 307418400, 323395200, 338947200, 354682800, 370411200, 386132400, 401860800, 417582e3, 433310400, 449031600, 465364800, 481086e3, 496814400, 512535600, 528264e3, 543985200, 559713600, 575434800, 591163200, 606884400, 622612800, 638334e3, 654667200, 670388400, 686116800, 701838e3, 717566400, 733287600, 749016e3, 764737200, 780465600, 796186800, 811915200, 828241200, 846388800, 859690800, 877838400, 891140400, 909288e3, 92259e4, 941342400, 954039600, 972792e3, 985489200, 1004241600, 1017543600, 1035691200, 1048993200, 1067140800, 1080442800, 1099195200, 1111892400, 1130644800, 1143342e3, 1162094400, 1174791600, 1193544e3, 1206846e3, 1224993600, 1238295600, 1256443200, 1269745200, 1288497600, 1301194800, 1319947200, 1332644400, 1351396800, 1364698800, 1382846400, 1396148400, 1414296e3, 1427598e3, 1445745600, 1459047600, 14778e5, 1490497200, 1509249600, 1521946800, 1540699200, 1554001200, 1572148800, 1585450800, 1603598400, 1616900400, 1635652800, 164835e4, 1667102400, 1679799600, 1698552e3, 1711854e3, 1730001600, 1743303600, 1761451200, 1774753200, 1792900800, 1806202800, 1824955200, 1837652400, 1856404800, 1869102e3, 1887854400, 1901156400, 1919304e3, 1932606e3],\n        offset: [5692, 5692, 7200, 10800, 7200, 10800, 7200, 3600, 7200, 3600, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200]\n    },\n    'Europe/Belgrade': {\n        time: [-2713910400, -905821200, -85725e4, -844552800, -828219600, -812498400, -79677e4, -777938400, -766616400, 417578400, 433306800, 449028e3, 465361200, 481082400, 496810800, 512532e3, 528260400, 543981600, 55971e4, 575431200, 591159600, 606880800, 622609200, 638330400, 654663600, 670384800, 686113200, 701834400, 717562800, 733284e3, 749012400, 764733600, 780462e3, 796183200, 811911600, 828237600, 846385200, 859687200, 877834800, 891136800, 909284400, 922586400, 941338800, 954036e3, 972788400, 985485600, 1004238e3, 101754e4, 1035687600, 1048989600, 1067137200, 1080439200, 1099191600, 1111888800, 1130641200, 1143338400, 1162090800, 1174788e3, 1193540400, 1206842400, 122499e4, 1238292e3, 1256439600, 1269741600, 1288494e3, 1301191200, 1319943600, 1332640800, 1351393200, 1364695200, 1382842800, 1396144800, 1414292400, 1427594400, 1445742e3, 1459044e3, 1477796400, 1490493600, 1509246e3, 1521943200, 1540695600, 1553997600, 1572145200, 1585447200, 1603594800, 1616896800, 1635649200, 1648346400, 1667098800, 1679796e3, 1698548400, 1711850400, 1729998e3, 17433e5, 1761447600, 1774749600, 1792897200, 1806199200, 1824951600, 1837648800, 1856401200, 1869098400, 1887850800, 1901152800, 1919300400, 1932602400],\n        offsetn    },\n    'Europe/Berlin': {\n        time: [-2422051200, -1693702800, -1680476400, -1663452e3, -1650142800, -1632002400, -1618693200, -938901600, -85725e4, -844552800, -828219600, -812498400, -79677e4, -781048800, -776556e3, -765925200, -761173200, -748476e3, -733266e3, -717627600, -714603600, -71037e4, -701902800, -684972e3, -670453200, -654127200, -639003600, 323834400, 338958e3, 354679200, 370407600, 386128800, 401857200, 417578400, 433306800, 449028e3, 465361200, 481082400, 496810800, 512532e3, 528260400, 543981600, 55971e4, 575431200, 591159600, 606880800, 622609200, 638330400, 654663600, 670384800, 686113200, 701834400, 717562800, 733284e3, 749012400, 764733600, 780462e3, 796183200, 811911600, 828237600, 846385200, 859687200, 877834800, 891136800, 909284400, 922586400, 941338800, 954036e3, 972788400, 985485600, 1004238e3, 101754e4, 1035687600, 1048989600, 1067137200, 1080439200, 1099191600, 1111888800, 1130641200, 1143338400, 1162090800, 1174788e3, 1193540400, 1206842400, 122499e4, 1238292e3, 1256439600, 1269741600, 1288494e3, 1301191200, 1319943600, 1332640800, 1351393200, 1364695200, 1382842800, 1396144800, 1414292400, 1427594400, 1445742e3, 1459044e3, 1477796400, 1490493600, 1509246e3, 1521943200, 1540695600, 1553997600, 1572145200, 1585447200, 1603594800, 1616896800, 1635649200, 1648346400, 1667098800, 1679796e3, 1698548400, 1711850400, 1729998e3, 17433e5, 1761447600, 1774749600, 1792897200, 1806199200, 1824951600, 1837648800, 1856401200, 1869098400, 1887850800, 1901152800, 1919300400, 1932602400],\n        offset: [3208, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 10800, 7200, 3600, 7200, 3600, 7200, 10800, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600]\n    },\n    'Europe/London': {\n        time: [-3852662400, -1691964e3, -1680469200, -1664143200, -1650142800, -1633903200, -1617483600, -1601848800, -1586034e3, -1570399200, -1552165200, -1538344800, -152253e4, -15075e5, -1490562e3, -1473631200, -1460926800, -1442786400, -1428872400, -1410732e3, -1396213200, -1379282400, -1364763600, -1348437600, -1333314e3, -1315778400, -1301259600, -1284328800, -126981e4, -1253484e3, -1238360400, -1221429600, -1206910800, -118998e4, -1175461200, -1159135200, -1143406800, -1126476e3, -1111957200, -1095631200, -1080507600, -1063576800, -1049058e3, -1032127200, -1017608400, -1001282400, -986158800, -969228e3, -950475600, -942012e3, -904514400, -896043600, -875484e3, -864594e3, -844034400, -832539600, -812584800, -798066e3, -781048800, -772059600, -764802e3, -748476e3, -733352400, -719445600, -717026400, -706741200, -699483600, -687996e3, -668034e3, -654732e3, -636584400, -622072800, -605739600, -590623200, -57429e4, -558568800, -542235600, -527119200, -512600400, -496274400, -481150800, -46422e4, -449701200, -432165600, -417646800, -401320800, -386197200, -369266400, -354747600, -337816800, -323298e3, -306972e3, -291848400, -276732e3, -257979600, -245282400, -22653e4, -213228e3, -195080400, -182383200, -163630800, -150933600, -132181200, -119484e3, -100731600, -88034400, -68677200, -59004e3, -37238400, 57726e3, 69818400, 89175600, 101268e3, 120625200, 132717600, 152074800, 164167200, 183524400, 196221600, 214974e3, 227671200, 246423600, 259120800, 278478e3, 290570400, 309927600, 32202e4, 341377200, 354675600, 372823200, 386125200, 404272800, 417574800, 435722400, 449024400, 467776800, 481078800, 499226400, 512528400, 530676e3, 543978e3, 562125600, 575427600, 593575200, 606877200, 625629600, 638326800, 657079200, 670381200, 688528800, 701830800, 719978400, 733280400, 751428e3, 76473e4, 782877600, 796179600, 814327200, 828234e3, 846381600, 859683600, 877831200, 891133200, 909280800, 922582800, 941335200, 954032400, 972784800, 985482e3, 1004234400, 1017536400, 1035684e3, 1048986e3, 1067133600, 1080435600, 1099188e3, 1111885200, 1130637600, 1143334800, 1162087200, 1174784400, 1193536800, 1206838800, 1224986400, 1238288400, 1256436e3, 1269738e3, 1288490400, 1301187600, 131994e4, 1332637200, 1351389600, 1364691600, 1382839200, 1396141200, 1414288800, 1427590800, 1445738400, 1459040400, 1477792800, 149049e4, 1509242400, 1521939600, 1540692e3, 1553994e3, 1572141600, 1585443600, 1603591200, 1616893200, 1635645600, 1648342800, 1667095200, 1679792400, 1698544800, 1711846800, 1729994400, 1743296400, 1761444e3, 1774746e3, 1792893600, 1806195600, 1824948e3, 1837645200, 1856397600, 1869094800, 1887847200, 1901149200, 1919296800, 1932598800],\n        offset: [-75, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 0, 3600, 0, 3600, 7200, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0]\n    },\n    'Europe/Luxembourg': {\n        time: [-2069712e3, -1692493200, -1680476400, -1662339600, -165015e4, -1632002400, -1618693200, -1612656e3, -1604278800, -1585515600, -1574038800, -1552255200, -1539997200, -1520546400, -1507510800, -1490569200, -1473642e3, -1459116e3, -1444006800, -142767e4, -1411866e3, -1396220400, -1379293200, -1364770800, -1348448400, -1333321200, -1316394e3, -1301266800, -1284339600, -126981e4, -1253484e3, -1238360400, -1221429600, -1206910800, -1191189600, -1175461200, -1160344800, -1143406800, -1127685600, -1111957200, -1096840800, -1080507600, -1063576800, -1049058e3, -1033336800, -1017608400, -1002492e3, -986158800, -969228e3, -950475600, -942012e3, -935182800, -85725e4, -844552800, -828219600, -812498400, -797979600, -781048800, -766616400, -745452e3, -733266e3, 228880800, 244004400, 260330400, 276058800, 29178e4, 307508400, 323834400, 338958e3, 354679200, 370407600, 386128800, 401857200, 417578400, 433306800, 449028e3, 465361200, 481082400, 496810800, 512532e3, 528260400, 543981600, 55971e4, 575431200, 591159600, 606880800, 622609200, 638330400, 654663600, 670384800, 686113200, 701834400, 717562800, 733284e3, 749012400, 764733600, 780462e3, 796183200, 811911600, 828237600, 846385200, 859687200, 877834800, 891136800, 909284400, 922586400, 941338800, 954036e3, 972788400, 985485600, 1004238e3, 101754e4, 1035687600, 1048989600, 1067137200, 1080439200, 1099191600, 1111888800, 1130641200, 1143338400, 1162090800, 1174788e3, 1193540400, 1206842400, 122499e4, 1238292e3, 1256439600, 1269741600, 1288494e3, 1301191200, 1319943600, 1332640800, 1351393200, 1364695200, 1382842800, 1396144800, 1414292400, 1427594400, 1445742e3, 1459044e3, 1477796400, 1490493600, 1509246e3, 1521943200, 1540695600, 1553997600, 1572145200, 1585447200, 1603594800, 1616896800, 1635649200, 1648346400, 1667098800, 1679796e3, 1698548400, 1711850400, 1729998e3, 17433e5, 1761447600, 1774749600, 1792897200, 1806199200, 1824951600, 1837648800, 1856401200, 1869098400, 1887850800, 1901152800, 1919300400, 1932602400],\n        offset: [1476, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600]\n    },\n    'Europe/Madrid': {\n        time: [-2177453684, -1631926800, -1616972400, -1601168400, -1585436400, -1442451600, -1427756400, -1379293200, -1364857200, -1348448400, -1333407600, -1316390400, -1301353200, -1284339600, -1269903600, -1026954e3, -1017702e3, -1001898e3, -999478800, -986083200, -951519600, -940208400, -873075600, -862614e3, -842835600, -828313200, -811386e3, -796863600, -779936400, -765414e3, -748486800, -733964400, -652323600, -639010800, 135126e3, 150253200, 166575600, 181702800, 196815600, 212547600, 22887e4, 243997200, 260330400, 276058800, 29178e4, 307508400, 323834400, 338958e3, 354679200, 370407600, 386128800, 401857200, 417578400, 433306800, 449028e3, 465361200, 481082400, 496810800, 512532e3, 528260400, 543981600, 55971e4, 575431200, 591159600, 606880800, 622609200, 638330400, 654663600, 670384800, 686113200, 701834400, 717562800, 733284e3, 749012400, 764733600, 780462e3, 796183200, 811911600, 828237600, 846385200, 859687200, 877834800, 891136800, 909284400, 922586400, 941338800, 954036e3, 972788400, 985485600, 1004238e3, 101754e4, 1035687600, 1048989600, 1067137200, 1080439200, 1099191600, 1111888800, 1130641200, 1143338400, 1162090800, 1174788e3, 1193540400, 1206842400, 122499e4, 1238292e3, 1256439600, 1269741600, 1288494e3, 1301191200, 1319943600, 1332640800, 1351393200, 1364695200, 1382842800, 1396144800, 1414292400, 1427594400, 1445742e3, 1459044e3, 1477796400, 1490493600, 1509246e3, 1521943200, 1540695600, 1553997600, 1572145200, 1585447200, 1603594800, 1616896800, 1635649200, 1648346400, 1667098800, 1679796e3, 1698548400, 1711850400, 1729998e3, 17433e5, 1761447600, 1774749600, 1792897200, 1806199200, 1824951600, 1837648800, 1856401200, 1869098400, 1887850800, 1901152800, 1919300400, 1932602400],\n        offset: [-884, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 7200, 3600, 0, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600]\n    },\n    'Europe/Paris': {\n        time: [-2486678340, -1855958340, -1689814800, -1680393600, -1665363600, -1648339200, -1635123600, -1616889600, -1604278800, -158544e4, -1574038800, -1552262400, -1539997200, -1520553600, -1507510800, -1490572800, -1470618e3, -1459123200, -1444006800, -1427673600, -1411952400, -1396224e3, -1379293200, -1364774400, -1348448400, -1333324800, -1316394e3, -1301270400, -1284339600, -1269820800, -1253494800, -1238371200, -1221440400, -1206921600, -1191200400, -1175472e3, -1160355600, -1143417600, -1127696400, -1111968e3, -1096851600, -1080518400, -1063587600, -1049068800, -1033347600, -1017619200, -1002502800, -986169600, -969238800, -950486400, -942012e3, -932432400, -85725e4, -844552800, -828219600, -812498400, -800064e3, -796258800, -781048800, -766616400, 196822800, 212547600, 228880800, 244004400, 260330400, 276058800, 29178e4, 307508400, 323834400, 338958e3, 354679200, 370407600, 386128800, 401857200, 417578400, 433306800, 449028e3, 465361200, 481082400, 496810800, 512532e3, 528260400, 543981600, 55971e4, 575431200, 591159600, 606880800, 622609200, 638330400, 654663600, 670384800, 686113200, 701834400, 717562800, 733284e3, 749012400, 764733600, 780462e3, 796183200, 811911600, 828237600, 846385200, 859687200, 877834800, 891136800, 909284400, 922586400, 941338800, 954036e3, 972788400, 985485600, 1004238e3, 101754e4, 1035687600, 1048989600, 1067137200, 1080439200, 1099191600, 1111888800, 1130641200, 1143338400, 1162090800, 1174788e3, 1193540400, 1206842400, 122499e4, 1238292e3, 1256439600, 1269741600, 1288494e3, 1301191200, 1319943600, 1332640800, 1351393200, 1364695200, 1382842800, 1396144800, 1414292400, 1427594400, 1445742e3, 1459044e3, 1477796400, 1490493600, 1509246e3, 1521943200, 1540695600, 1553997600, 1572145200, 1585447200, 1603594800, 1616896800, 1635649200, 1648346400, 1667098800, 1679796e3, 1698548400, 1711850400, 1729998e3, 17433e5, 1761447600, 1774749600, 1792897200, 1806199200, 1824951600, 1837648800, 1856401200, 1869098400, 1887850800, 1901152800, 1919300400, 1932602400],\n        offset: [561, 561, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 7200, 3600, 7200, 3600, 7200, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600]\n    },\n    'Europe/Rome': {\n        time: [-3259094400, -2403562204, -1690761600, -168048e4, -1664755200, -1648944e3, -163512e4, -1616889600, -1604275200, -1585526400, -1571011200, -1555286400, -932428800, -85725e4, -844552800, -828219600, -812498400, -798066e3, -781048800, -76671e4, -750895200, -733352400, -719452800, -70191e4, -689205600, -670453200, -114048e3, -103161600, -81993600, -71708400, -50544e3, -40258800, -18489600, -8204400, 1296e4, 23245200, 43804800, 54694800, 75859200, 86749200, 107913600, 118198800, 138758400, 149648400, 170812800, 181098e3, 202262400, 212547600, 233107200, 243997200, 265161600, 276051600, 296611200, 307501200, 323834400, 338958e3, 354679200, 370407600, 386128800, 401857200, 417578400, 433306800, 449028e3, 465361200, 481082400, 496810800, 512532e3, 528260400, 543981600, 55971e4, 575431200, 591159600, 606880800, 622609200, 638330400, 654663600, 670384800, 686113200, 701834400, 717562800, 733284e3, 749012400, 764733600, 780462e3, 796183200, 811911600, 828237600, 846385200, 859687200, 877834800, 891136800, 909284400, 922586400, 941338800, 954036e3, 972788400, 985485600, 1004238e3, 101754e4, 1035687600, 1048989600, 1067137200, 1080439200, 1099191600, 1111888800, 1130641200, 1143338400, 1162090800, 1174788e3, 1193540400, 1206842400, 122499e4, 1238292e3, 1256439600, 1269741600, 1288494e3, 1301191200, 1319943600, 1332640800, 1351393200, 1364695200, 1382842800, 1396144800, 1414292400, 1427594400, 1445742e3, 1459044e3, 1477796400, 1490493600, 1509246e3, 1521943200, 1540695600, 1553997600, 1572145200, 1585447200, 1603594800, 1616896800, 1635649200, 1648346400, 1667098800, 1679796e3, 1698548400, 1711850400, 1729998e3, 17433e5, 1761447600, 1774749600, 1792897200, 1806199200, 1824951600, 1837648800, 1856401200, 1869098400, 1887850800, 1901152800, 1919300400, 1932602400],\n        offsetn    },\n    'Europe/Warsaw': {\n        time: [-2840140800, -1717027200, -1693702800, -1680476400, -1663452e3, -1650142800, -1632002400, -1618693200, -1600466400, -1587157200, -1501718400, -931730400, -85725e4, -844552800, -828219600, -812498400, -796600800, -778723200, -762652800, -748483200, -733266e3, -715212e3, -701902800, -684972e3, -670453200, -654127200, -639003600, -397090800, -386805600, -371084400, -355356e3, -334191600, -323301600, -307580400, -291852e3, -271292400, -260402400, -239842800, -228952800, -208393200, -197503200, -176338800, -166053600, 228877200, 244000800, 260326800, 276055200, 291776400, 307504800, 323830800, 338954400, 354675600, 370404e3, 386125200, 401853600, 417574800, 433303200, 449024400, 465357600, 481078800, 496807200, 512528400, 528256800, 543978e3, 559706400, 575431200, 591159600, 606880800, 622609200, 638330400, 654663600, 670384800, 686113200, 701834400, 717562800, 733284e3, 749012400, 764733600, 780462e3, 796183200, 811911600, 828237600, 846385200, 859687200, 877834800, 891136800, 909284400, 922586400, 941338800, 954036e3, 972788400, 985485600, 1004238e3, 101754e4, 1035687600, 1048989600, 1067137200, 1080439200, 1099191600, 1111888800, 1130641200, 1143338400, 1162090800, 1174788e3, 1193540400, 1206842400, 122499e4, 1238292e3, 1256439600, 1269741600, 1288494e3, 1301191200, 1319943600, 1332640800, 1351393200, 1364695200, 1382842800, 1396144800, 1414292400, 1427594400, 1445742e3, 1459044e3, 1477796400, 1490493600, 1509246e3, 1521943200, 1540695600, 1553997600, 1572145200, 1585447200, 1603594800, 1616896800, 1635649200, 1648346400, 1667098800, 1679796e3, 1698548400, 1711850400, 1729998e3, 17433e5, 1761447600, 1774749600, 1792897200, 1806199200, 1824951600, 1837648800, 1856401200, 1869098400, 1887850800, 1901152800, 1919300400, 1932602400],\n        offset: [5040, 5040, 3600, 7200, 3600, 7200, 3600, 7200, 7200, 10800, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600]\n    },\n    'Europe/Istanbul': {\n        time: [-2840140800, -1869868800, -1693699200, -168048e4, -1570406400, -1552176e3, -1538352e3, -1522540800, -1507507200, -1490572800, -1440201600, -1428019200, -1409702400, -1396483200, -931132800, -922752e3, -917827200, -892425600, -875836800, -857347200, -781056e3, -764726400, -744336e3, -733795200, -716428800, -701913600, -684979200, -670464e3, -654134400, -639014400, -621820800, -60696e4, -590025600, -575424e3, -235612800, -228268800, -177724800, -165715200, 10540800, 23846400, 41990400, 55296e3, 74044800, 87350400, 107917200, 12123e4, 133927200, 152686800, 165369600, 183513600, 202435200, 215568e3, 228873600, 245808e3, 260323200, 277257600, 308793600, 323838e3, 340243200, 354682800, 371692800, 386132400, 403142400, 428457600, 433900800, 482803200, 496713600, 512528400, 528256800, 543978e3, 559706400, 575427600, 591156e3, 606877200, 622605600, 638326800, 65466e4, 670381200, 686109600, 701830800, 717559200, 733280400, 749008800, 764125200, 780458400, 796179600, 811908e3, 828234e3, 846381600, 859683600, 877831200, 891133200, 909280800, 922582800, 941335200, 954032400, 972784800, 985482e3, 1004234400, 1017536400, 1035684e3, 1048986e3, 1067133600, 1080435600, 1099188e3, 1111885200, 1130637600, 1143334800, 1162087200, 1174791600, 1193544e3, 1206846e3, 1224993600, 1238295600, 1256443200, 1269745200, 1288497600, 1301281200, 1319947200, 1332644400, 1351396800, 1364698800, 1382846400, 1396234800, 1414296e3, 1427598e3, 1446955200, 1459047600, 1473206400, 1925002800],\n        offset: [6952, 7016, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 10800]\n    },\n    'Europe/Zurich': {\n        time: [-3675196800, -2385244800, -904431600, -891122400, -872982e3, -859672800, 354679200, 370407600, 386128800, 401857200, 417578400, 433306800, 449028e3, 465361200, 481082400, 496810800, 512532e3, 528260400, 543981600, 55971e4, 575431200, 591159600, 606880800, 622609200, 638330400, 654663600, 670384800, 686113200, 701834400, 717562800, 733284e3, 749012400, 764733600, 780462e3, 796183200, 811911600, 828237600, 846385200, 859687200, 877834800, 891136800, 909284400, 922586400, 941338800, 954036e3, 972788400, 985485600, 1004238e3, 101754e4, 1035687600, 1048989600, 1067137200, 1080439200, 1099191600, 1111888800, 1130641200, 1143338400, 1162090800, 1174788e3, 1193540400, 1206842400, 122499e4, 1238292e3, 1256439600, 1269741600, 1288494e3, 1301191200, 1319943600, 1332640800, 1351393200, 1364695200, 1382842800, 1396144800, 1414292400, 1427594400, 1445742e3, 1459044e3, 1477796400, 1490493600, 1509246e3, 1521943200, 1540695600, 1553997600, 1572145200, 1585447200, 1603594800, 1616896800, 1635649200, 1648346400, 1667098800, 1679796e3, 1698548400, 1711850400, 1729998e3, 17433e5, 1761447600, 1774749600, 1792897200, 1806199200, 1824951600, 1837648800, 1856401200, 1869098400, 1887850800, 1901152800, 1919300400, 1932602400],\n        offset: [2048, 1786, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 7200, 3600]\n    },\n    'Australia/Sydney': {\n        time: [-2364076800, -1672531140, -1665352800, -883605600, -876088800, -860364e3, -844639200, -828309600, -813189600, 57722400, 68007600, 89172e3, 100062e3, 120621600, 131511600, 152071200, 162961200, 183520800, 195015600, 215575200, 226465200, 247024800, 257914800, 278474400, 289364400, 309924e3, 320814e3, 341373600, 352263600, 372823200, 386737200, 404877600, 415767600, 436327200, 447217200, 467776800, 478666800, 499226400, 511326e3, 530071200, 542775600, 562125600, 57483e4, 59418e4, 606279600, 625629600, 636519600, 657079200, 667969200, 688528800, 699418800, 719978400, 731473200, 752032800, 762922800, 783482400, 794372400, 814932e3, 828241200, 846381600, 859690800, 877831200, 891140400, 909280800, 92259e4, 941335200, 954039600, 967341600, 985489200, 1004234400, 1017543600, 1035684e3, 1048993200, 1067133600, 1080442800, 1099188e3, 1111892400, 1130637600, 1143946800, 1162087200, 1174791600, 1193536800, 1207450800, 1223172e3, 1238900400, 1254621600, 127035e4, 1286071200, 1301799600, 1317520800, 1333249200, 1349575200, 1365303600, 1381024800, 1396753200, 1412474400, 1428202800, 1443924e3, 1459652400, 1475373600, 1491102e3, 1506823200, 1522551600, 1538877600, 1554606e3, 1570327200, 1586055600, 1601776800, 1617505200, 1633226400, 1648954800, 1664676e3, 1680404400, 1696125600, 1712458800, 172818e4, 1743908400, 1759629600, 1775358e3, 1791079200, 1806807600, 1822528800, 1838257200, 1853978400, 1869706800, 1886032800, 1901761200, 1917482400, 1933210800],\n        offset: [36292, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600]\n    },\n    'Australia/Brisbane': {\n        time: [-2366755200, -1672531140, -1665352800, -883605600, -876088800, -860364e3, -844639200, -828309600, -813189600, 57722400, 68007600, 625629600, 636519600, 657079200, 667969200, 688528800, 699418800, 1925028e3],\n        offset: [36728, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3]\n    },\n    'Australia/Adelaide': {\n        time: [-2364076800, -2230156800, -1672531140, -1665352800, -883605600, -876088800, -860364e3, -844639200, -828309600, -813189600, 57722400, 68007600, 89172e3, 100062e3, 120621600, 131511600, 152071200, 162961200, 183520800, 195015600, 215575200, 226465200, 247024800, 257914800, 278474400, 289364400, 309924e3, 320814e3, 341373600, 352263600, 372823200, 384318e3, 404877600, 415767600, 436327200, 447217200, 467776800, 478666800, 499226400, 511326e3, 530071200, 542775600, 562125600, 57483e4, 59418e4, 606279600, 625629600, 637729200, 657079200, 667969200, 688528800, 701233200, 719978400, 731473200, 752032800, 764132400, 783482400, 796186800, 814932e3, 828241200, 846381600, 859690800, 877831200, 891140400, 909280800, 92259e4, 941335200, 954039600, 972784800, 985489200, 1004234400, 1017543600, 1035684e3, 1048993200, 1067133600, 1080442800, 1099188e3, 1111892400, 1130637600, 1143946800, 1162087200, 1174791600, 1193536800, 1207450800, 1223172e3, 1238900400, 1254621600, 127035e4, 1286071200, 1301799600, 1317520800, 1333249200, 1349575200, 1365303600, 1381024800, 1396753200, 1412474400, 1428202800, 1443924e3, 1459652400, 1475373600, 1491102e3, 1506823200, 1522551600, 1538877600, 1554606e3, 1570327200, 1586055600, 1601776800, 1617505200, 1633226400, 1648954800, 1664676e3, 1680404400, 1696125600, 1712458800, 172818e4, 1743908400, 1759629600, 1775358e3, 1791079200, 1806807600, 1822528800, 1838257200, 1853978400, 1869706800, 1886032800, 1901761200, 1917482400, 1933210800],\n        offset: [33260, 32400, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800, 34200, 37800]\n    },\n    'Australia/ACT': {\n        time: [-2364076800, -1672531140, -1665352800, -883605600, -876088800, -860364e3, -844639200, -828309600, -813189600, 57722400, 68007600, 89172e3, 100062e3, 120621600, 131511600, 152071200, 162961200, 183520800, 195015600, 215575200, 226465200, 247024800, 257914800, 278474400, 289364400, 309924e3, 320814e3, 341373600, 352263600, 372823200, 386737200, 404877600, 415767600, 436327200, 447217200, 467776800, 478666800, 499226400, 511326e3, 530071200, 542775600, 562125600, 57483e4, 59418e4, 606279600, 625629600, 636519600, 657079200, 667969200, 688528800, 699418800, 719978400, 731473200, 752032800, 762922800, 783482400, 794372400, 814932e3, 828241200, 846381600, 859690800, 877831200, 891140400, 909280800, 92259e4, 941335200, 954039600, 967341600, 985489200, 1004234400, 1017543600, 1035684e3, 1048993200, 1067133600, 1080442800, 1099188e3, 1111892400, 1130637600, 1143946800, 1162087200, 1174791600, 1193536800, 1207450800, 1223172e3, 1238900400, 1254621600, 127035e4, 1286071200, 1301799600, 1317520800, 1333249200, 1349575200, 1365303600, 1381024800, 1396753200, 1412474400, 1428202800, 1443924e3, 1459652400, 1475373600, 1491102e3, 1506823200, 1522551600, 1538877600, 1554606e3, 1570327200, 1586055600, 1601776800, 1617505200, 1633226400, 1648954800, 1664676e3, 1680404400, 1696125600, 1712458800, 172818e4, 1743908400, 1759629600, 1775358e3, 1791079200, 1806807600, 1822528800, 1838257200, 1853978400, 1869706800, 1886032800, 1901761200, 1917482400, 1933210800],\n        offset: [36292, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600, 36e3, 39600]\n    },\n    'Asia/Almaty': {\n        time: [-1441152e3, -1247529600, 354931200, 370742400, 386467200, 402278400, 418003200, 433814400, 449625600, 465361200, 481082400, 496810800, 512532e3, 528260400, 543981600, 55971e4, 575431200, 591159600, 606880800, 622609200, 638330400, 654663600, 670384800, 686113200, 695786400, 701834400, 717562800, 733284e3, 749012400, 764733600, 780462e3, 796183200, 811911600, 828237600, 846385200, 859687200, 877834800, 891136800, 909284400, 922586400, 941338800, 954036e3, 972788400, 985485600, 1004238e3, 101754e4, 1035687600, 1048989600, 1067137200, 1080439200, 1099191600, 1925013600],\n        offset: [18468, 18e3, 21600, 25200, 21600, 25200, 21600, 25200, 21600, 25200, 21600, 25200, 21600, 25200, 21600, 25200, 21600, 25200, 21600, 25200, 21600, 25200, 21600, 21600, 18e3, 21600, 25200, 21600, 25200, 21600, 25200, 21600, 25200, 21600, 25200, 21600, 25200, 21600, 25200, 21600, 25200, 21600, 25200, 21600, 25200, 21600, 25200, 21600, 25200, 21600, 25200, 21600]\n    },\n    'Asia/Ashkhabad': {\n        time: [-1441152e3, -1247529600, 354931200, 370742400, 386467200, 402278400, 418003200, 433814400, 449625600, 465361200, 481082400, 496810800, 512532e3, 528260400, 543981600, 55971e4, 575431200, 591159600, 606880800, 622609200, 638330400, 654663600, 670384800, 686113200, 695786400, 192501e4],\n        offset: [14012, 14400, 18e3, 21600, 18e3, 21600, 18e3, 21600, 18e3, 21600, 18e3, 21600, 18e3, 21600, 18e3, 21600, 18e3, 21600, 18e3, 21600, 18e3, 21600, 18e3, 18e3, 14400, 18e3]\n    },\n    'Asia/Tokyo': {\n        time: [-2587678861, -683762400, -672357600, -654732e3, -640908e3, -620258400, -609458400, -588808800, -578008800, 1925024400],\n        offset: [33539, 32400, 36e3, 32400, 36e3, 32400, 36e3, 32400, 36e3, 32400]\n    },\n    'Asia/Taipei': {\n        time: [-2335219200, -1017792e3, -766191600, -745804800, -733795200, -716860800, -699580800, -683856e3, -670636800, -65232e4, -639100800, -620784e3, -607564800, -589248e3, -576028800, -562896e3, -541728e3, -528681600, -510192e3, -497145600, -478656e3, -465609600, -449798400, -433987200, -418176e3, -402451200, -38664e4, -370915200, -355104e3, -339379200, -323568e3, -302486400, -291945600, -270950400, -260409600, 134006400, 149817600, 165542400, 181353600, 299635200, 307584e3, 1925020800],\n        offset: [29160, 28800, 32400, 28800, 32400, 28800, 32400, 28800, 32400, 28800, 32400, 28800, 32400, 28800, 32400, 28800, 32400, 28800, 32400, 28800, 32400, 28800, 32400, 28800, 32400, 28800, 32400, 28800, 32400, 28800, 32400, 28800, 32400, 28800, 32400, 28800, 32400, 28800, 32400, 28800, 32400, 28800]\n    },\n    'Asia/Singapore': {\n        time: [-2177452800, -2038176e3, -1167609600, -1073001600, -894153600, -879638400, -766972800, 378691200, 1925020800],\n        offset: [24925, 24925, 25200, 26400, 26400, 27e3, 32400, 27e3, 28800]\n    },\n    'Asia/Shanghai': {\n        time: [-2177452800, -933465600, -923097600, -908755200, -891561600, 515548800, 52704e4, 545184e3, 558489600, 576633600, 589939200, 608688e3, 621993600, 640137600, 653443200, 671587200, 684892800, 1925020800],\n        offset: [29143, 28800, 32400, 28800, 32400, 28800, 32400, 28800, 32400, 28800, 32400, 28800, 32400, 28800, 32400, 28800, 32400, 28800]\n    },\n    'Asia/Seoul': {\n        time: [-1948752e3, -1830384e3, -767318400, -498096e3, -462672e3, -451699200, -429753600, -418262400, -399513600, -387417600, -368064e3, -355968e3, -336614400, -324518400, -305164800, -293068800, -264902400, 547610400, 560919600, 57906e4, 592369200, 1925024400],\n        offset: [30472, 30600, 32400, 32400, 30600, 34200, 30600, 34200, 30600, 34200, 30600, 34200, 30600, 34200, 30600, 34200, 30600, 32400, 36e3, 32400, 36e3, 32400]\n    },\n    'Asia/Tehran': {\n        time: [-1704153600, -757382400, 247190400, 259286400, 277776e3, 283996800, 290822400, 306547200, 322444800, 338515200, 673228800, 685497600, 701222400, 71712e4, 732758400, 748656e3, 764294400, 780192e3, 795830400, 811728e3, 827366400, 843264e3, 858988800, 874886400, 890524800, 906422400, 922060800, 937958400, 953596800, 969494400, 985219200, 1001116800, 1016755200, 1032652800, 1048291200, 1064188800, 1079827200, 1095724800, 1111449600, 1127347200, 1206057600, 1221955200, 123768e4, 1253577600, 1269216e3, 1285113600, 1300752e3, 1316649600, 1332288e3, 1348185600, 1363910400, 1379808e3, 1395446400, 1411344e3, 1426982400, 144288e4, 1458518400, 1474416e3, 1490140800, 1506038400, 1521676800, 1537574400, 1553212800, 1569110400, 1584748800, 1600646400, 1616371200, 1632268800, 1647907200, 1663804800, 1679443200, 1695340800, 1710979200, 1726876800, 1742601600, 1758499200, 1774137600, 1790035200, 1805673600, 1821571200, 1837209600, 1853107200, 1868745600, 1884643200, 1900368e3, 1916265600, 1931904e3],\n        offset: [12344, 12344, 12600, 14400, 18e3, 14400, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600]\n    },\n    'Asia/Dubai': { time: [-1577923200, 1925006400], offset: [13272, 14400] },\n    'Asia/Kolkata': {\n        time: [-2840140800, -891561600, -872035200, -862617600, -764121600, 1925011800],\n        offset: [21208, 21200, 23400, 19800, 23400, 19800]\n    },\n    'Asia/Hong_Kong': {\n        time: [-2056665600, -907360200, -891635400, -884217600, -766713600, -747952200, -728512200, -717021e3, -694470600, -683757e3, -668032200, -654726600, -636582600, -623277e3, -605133e3, -591827400, -573683400, -559773e3, -542320200, -528323400, -510179400, -498083400, -478729800, -466633800, -446675400, -435184200, -415225800, -403129800, -383776200, -371680200, -352326600, -340230600, -320877e3, -308781e3, -288822600, -277331400, -257373e3, -245881800, -225923400, -213827400, -194473800, -182377800, -163024200, -148509e3, -132784200, -117059400, -101334600, -85609800, -69280200, -53555400, -37830600, -22105800, -6381e3, 9343800, 25068600, 40793400, 56518200, 72243e3, 88572600, 104297400, 120022200, 126070200, 151471800, 167196600, 182921400, 198646200, 214371e3, 295414200, 309324600, 1925020800],\n        offset: [27402, 28800, 32400, 28800, 32400, 28800, 32400, 28800, 32400, 28800, 32400, 28800, 32400, 28800, 32400, 28800, 32400, 28800, 32400, 28800, 32400, 28800, 32400, 28800, 32400, 28800, 32400, 28800, 32400, 28800, 32400, 28800, 32400, 28800, 32400, 28800, 32400, 28800, 32400, 28800, 32400, 28800, 32400, 28800, 32400, 28800, 32400, 28800, 32400, 28800, 32400, 28800, 32400, 28800, 32400, 28800, 32400, 28800, 32400, 28800, 32400, 28800, 32400, 28800, 32400, 28800, 32400, 28800, 32400, 28800]\n    },\n    'Asia/Bangkok': {\n        time: [-2840140800, -1570060800, 1925017200],\n        offset: [24124, 24124, 25200]\n    },\n    'Asia/Chongqing': {\n        time: [-2177452800, -933465600, -923097600, -908755200, -891561600, 515548800, 52704e4, 545184e3, 558489600, 576633600, 589939200, 608688e3, 621993600, 640137600, 653443200, 671587200, 684892800, 1925020800],\n        offset: [29143, 28800, 32400, 28800, 32400, 28800, 32400, 28800, 32400, 28800, 32400, 28800, 32400, 28800, 32400, 28800, 32400, 28800]\n    },\n    'Asia/Jerusalem': {\n        time: [-2840140800, -1640995200, -933638400, -857347200, -844293600, -825811200, -812678400, -794188800, -779846400, -762645600, -748303200, -731116800, -681955200, -673228800, -667951200, -65232e4, -636415200, -62208e4, -608936400, -59184e4, -572475600, -558568800, -542840400, -527724e3, -514414800, -490838400, -482976e3, -459468e3, -451526400, -428544e3, -418251600, -400024800, -387417600, 142387200, 150854400, 167184e3, 178675200, 482284800, 495590400, 516758400, 526435200, 545443200, 558489600, 576633600, 589334400, 609897600, 620784e3, 638323200, 651628800, 669772800, 683683200, 701827200, 715737600, 733708800, 747187200, 765158400, 778032e3, 796608e3, 810086400, 826848e3, 842832e3, 858902400, 874195200, 890352e3, 90504e4, 923018400, 936324e3, 955677600, 970794e3, 986778e3, 1001293200, 1017363600, 1033952400, 1048813200, 1065142800, 1081299600, 1095814800, 1112320800, 1128823200, 1143770400, 1159668e3, 117522e4, 1189908e3, 1206669600, 1223172e3, 1238119200, 1254016800, 1269568800, 1284256800, 1301623200, 1317520800, 1333072800, 1348365600, 1364522400, 1382839200, 1395972e3, 1414288800, 1427421600, 1445738400, 1458871200, 1477792800, 1490320800, 1509242400, 1521770400, 1540692e3, 1553824800, 1572141600, 1585274400, 1603591200, 1616724e3, 1635645600, 1648173600, 1667095200, 1679623200, 1698544800, 1711677600, 1729994400, 1743127200, 1761444e3, 1774576800, 1792893600, 1806026400, 1824948e3, 1837476e3, 1856397600, 1868925600, 1887847200, 190098e4, 1919296800, 1932429600],\n        offset: [8454, 8440, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 14400, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200]\n    },\n    'Asia/Kuwait': { time: [-719625600, 1925002800], offset: [11212, 10800] },\n    'Asia/Muscat': { time: [-1577923200, 1925006400], offset: [13272, 14400] },\n    'Asia/Qatar': { time: [-1577923200, 76204800, 1925002800], offset: [12368, 14400, 10800] },\n    'Asia/Riyadh': { time: [-719625600, 1925002800], offset: [11212, 10800] },\n    'Pacific/Auckland': {\n        time: [-3192393600, -1330293600, -1320012e3, -1300658400, -1287352800, -1269208800, -1255903200, -1237759200, -1224453600, -1206309600, -1192399200, -117486e4, -1160949600, -1143410400, -1125871200, -1112565600, -1094421600, -1081116e3, -1062972e3, -1049666400, -1031522400, -1018216800, -1000072800, -986767200, -968018400, -955317600, -936568800, -923263200, -757382400, 152676e3, 162356400, 183520800, 195015600, 215575200, 226465200, 247024800, 257914800, 278474400, 289364400, 309924e3, 320814e3, 341373600, 352263600, 372823200, 384318e3, 404877600, 415767600, 436327200, 447217200, 467776800, 478666800, 499226400, 510116400, 530676e3, 541566e3, 562125600, 573620400, 59418e4, 60507e4, 623815200, 637729200, 655264800, 669178800, 686714400, 700628400, 718164e3, 732682800, 749613600, 764132400, 781063200, 795582e3, 812512800, 827031600, 844567200, 858481200, 876016800, 889930800, 907466400, 921985200, 938916e3, 953434800, 970365600, 984884400, 100242e4, 1016334e3, 1033869600, 1047783600, 1065319200, 1079838e3, 1096768800, 1111287600, 1128218400, 1142737200, 1159668e3, 1174186800, 1191117600, 1207450800, 1222567200, 1238900400, 1254016800, 127035e4, 1285466400, 1301799600, 1316916e3, 1333249200, 1348970400, 1365303600, 138042e4, 1396753200, 1411869600, 1428202800, 1443319200, 1459652400, 1474768800, 1491102e3, 1506218400, 1522551600, 1538272800, 1554606e3, 1569722400, 1586055600, 1601172e3, 1617505200, 1632621600, 1648954800, 1664071200, 1680404400, 1695520800, 1712458800, 1727575200, 1743908400, 1759024800, 1775358e3, 1790474400, 1806807600, 1821924e3, 1838257200, 1853373600, 1869706800, 1885428e3, 1901761200, 1916877600, 1933210800],\n        offset: [41944, 41400, 45en    },\n    'Pacific/Chatham': {\n        time: [-3192393600, -757382400, 152678700, 162359100, 183523500, 195018300, 215577900, 226467900, 247027500, 257917500, 278477100, 289367100, 309926700, 320816700, 341376300, 352266300, 372825900, 384320700, 404880300, 415770300, 436329900, 447219900, 467779500, 478669500, 499229100, 510119100, 530678700, 541568700, 562128300, 573623100, 594182700, 605072700, 623817900, 637731900, 655267500, 669181500, 686717100, 700631100, 718166700, 732685500, 749616300, 764135100, 781065900, 795584700, 812515500, 827034300, 844569900, 858483900, 876019500, 889933500, 907469100, 921987900, 938918700, 953437500, 970368300, 984887100, 1002422700, 1016336700, 1033872300, 1047786300, 1065321900, 1079840700, 1096771500, 1111290300, 1128221100, 1142739900, 1159670700, 1174189500, 1191120300, 1207453500, 1222569900, 1238903100, 1254019500, 1270352700, 1285469100, 1301802300, 1316918700, 1333251900, 1348973100, 1365306300, 1380422700, 1396755900, 1411872300, 1428205500, 1443321900, 1459655100, 1474771500, 1491104700, 1506221100, 1522554300, 1538275500, 1554608700, 1569725100, 1586058300, 1601174700, 1617507900, 1632624300, 1648957500, 1664073900, 1680407100, 1695523500, 1712461500, 1727577900, 1743911100, 1759027500, 1775360700, 1790477100, 1806810300, 1821926700, 1838259900, 1853376300, 1869709500, 1885430700, 1901763900, 1916880300, 1933213500],\n        offset: [44028, 44100, 45900, 49500, 45900, 49500, 45900, 49500, 45900, 49500, 45900, 49500, 45900, 49500, 45900, 49500, 45900, 49500, 45900, 49500, 45900, 49500, 45900, 49500, 45900, 49500, 45900, 49500, 45900, 49500, 45900, 49500, 45900, 49500, 45900, 49500, 45900, 49500, 45900, 49500, 45900, 49500, 45900, 49500, 45900, 49500, 45900, 49500, 45900, 49500, 45900, 49500, 45900, 49500, 45900, 49500, 45900, 49500, 45900, 49500, 45900, 49500, 45900, 49500, 45900, 49500, 45900, 49500, 45900, 49500, 45900, 49500, 45900, 49500, 45900, 49500, 45900, 49500, 45900, 49500, 45900, 49500, 45900, 49500, 45900, 49500, 45900, 49500, 45900, 49500, 45900, 49500, 45900, 49500, 45900, 49500, 45900, 49500, 45900, 49500, 45900, 49500, 45900, 49500, 45900, 49500, 45900, 49500, 45900, 49500, 45900, 49500, 45900, 49500, 45900, 49500]\n    },\n    'Pacific/Fakaofo': { time: [-2177452800, 1325203200, 1925038800], offset: [-41096, -39600, 46800] },\n    'Pacific/Honolulu': {\n        time: [-2334139200, -1157320800, -1155470400, -880236e3, -765410400, -712188e3, 1924956e3],\n        offset: [-37886, -37800, -34200, -37800, -34200, -37800, -36e3]\n    },\n    'America/Mexico_City': {\n        time: [-1514763396, -1343091600, -1234828800, -1220317200, -1207180800, -1191369600, -975283200, -963187200, -917136e3, -907372800, -821923200, -810086400, -627523200, -613008e3, 828842400, 846381600, 860292e3, 877831200, 891741600, 909280800, 923191200, 941335200, 954640800, 972784800, 989114400, 1001815200, 1018144800, 1035684e3, 1049594400, 1067133600, 1081044e3, 1099188e3, 1112493600, 1130637600, 1143943200, 1162087200, 1175392800, 1193536800, 1207447200, 1224986400, 1238896800, 1256436e3, 1270346400, 1288490400, 1301796e3, 131994e4, 1333245600, 1351389600, 13653e5, 1382839200, 1396749600, 1414288800, 1428199200, 1445738400, 1459648800, 1477792800, 1491098400, 1509242400, 1522548e3, 1540692e3, 1554602400, 1572141600, 1586052e3, 1603591200, 1617501600, 1635645600, 1648951200, 1667095200, 1680400800, 1698544800, 1712455200, 1729994400, 1743904800, 1761444e3, 1775354400, 1792893600, 1806804e3, 1824948e3, 1838253600, 1856397600, 1869703200, 1887847200, 1901757600, 1919296800, 1933207200],\n        offset: [-23796, -25200, -21600, -25200, -21600, -25200, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600, -18e3, -21600]\n    },\n    'Africa/Cairo': {\n        time: [-2185401600, -929836800, -923097600, -906163200, -892857600, -875836800, -857779200, -844300800, -825811200, -812678400, -794188800, -779846400, -762652800, -399081600, -38664e4, -368323200, -355104e3, -336783600, -323643600, -305161200, -292021200, -273625200, -260485200, -242089200, -228949200, -210553200, -197413200, -178930800, -165790800, -147394800, -134254800, -115858800, -102632400, -84322800, -71096400, -52700400, -39474e3, -21164400, -7938e3, 10371600, 23598e3, 41907600, 55134e3, 7353e4, 86756400, 105066e3, 118292400, 136602e3, 149828400, 168138e3, 181364400, 199760400, 212986800, 231296400, 244522800, 262832400, 276058800, 294368400, 307594800, 325990800, 339217200, 357526800, 370753200, 396406800, 402289200, 426819600, 433825200, 452221200, 465447600, 483757200, 496983600, 515293200, 528519600, 546829200, 560055600, 578451600, 591678e3, 610419600, 623214e3, 641523600, 65475e4, 673059600, 686286e3, 704682e3, 717908400, 736218e3, 749444400, 767754e3, 780980400, 799027200, 812332800, 830476800, 843782400, 861926400, 875232e3, 893376e3, 906681600, 925430400, 938736e3, 95688e4, 970185600, 988329600, 1001635200, 1019779200, 1033084800, 1051228800, 1064534400, 1083283200, 1096588800, 1114732800, 1128038400, 1146182400, 1158883200, 1177632e3, 1189123200, 1209081600, 1219968e3, 1240531200, 1250812800, 1272585600, 1281484800, 1284076800, 1285891200, 1400198400, 1403827200, 1406851200, 1411689600, 1924999200],\n        offset: [7509, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200]\n    },\n    'Africa/Johannesburg': {\n        time: [-2458166400, -2109283200, -860968800, -845244e3, -829519200, -813794400, 1924999200],\n        offset: [6720, 5400, 7200, 10800, 7200, 10800, 7200]\n    },\n    'Asia/Kathmandu': { time: [-1577923200, 504921600, 1925012700], offset: [20476, 19800, 20700] },\n    'US/Mountain': {\n        time: [-2717668796, -1633298400, -1615154400, -1601848800, -1583704800, -1570399200, -1551650400, -1538949600, -1534111200, -880236e3, -769417200, -765410400, -147909600, -13158e4, -11646e4, -100130400, -84405600, -68680800, -52956e3, -37231200, -21506400, -5781600, 9943200, 25668e3, 41392800, 57722400, 73447200, 89172e3, 104896800, 120621600, 126669600, 152071200, 162352800, 183520800, 199245600, 215575200, 230695200, 247024800, 262749600, 278474400, 294199200, 309924e3, 325648800, 341373600, 357098400, 372823200, 388548e3, 404877600, 419997600, 436327200, 452052e3, 467776800, 483501600, 499226400, 514951200, 530676e3, 544586400, 562125600, 576036e3, 59418e4, 607485600, 625629600, 638935200, 657079200, 670989600, 688528800, 702439200, 719978400, 733888800, 752032800, 765338400, 783482400, 796788e3, 814932e3, 828842400, 846381600, 860292e3, 877831200, 891741600, 909280800, 923191200, 941335200, 954640800, 972784800, 986090400, 1004234400, 1018144800, 1035684e3, 1049594400, 1067133600, 1081044e3, 1099188e3, 1112493600, 1130637600, 1143943200, 1162087200, 1173578400, 1194141600, 1205028e3, 1225591200, 1236477600, 1257040800, 1268532e3, 1289095200, 1299981600, 1320544800, 1331431200, 1351994400, 1362880800, 1383444e3, 1394330400, 1414893600, 142578e4, 1446343200, 1457834400, 1478397600, 1489284e3, 1509847200, 1520733600, 1541296800, 1552183200, 1572746400, 1583632800, 1604196e3, 1615687200, 1636250400, 1647136800, 16677e5, 1678586400, 1699149600, 1710036e3, 1730599200, 1741485600, 1762048800, 1772935200, 1793498400, 1804989600, 1825552800, 1836439200, 1857002400, 1867888800, 1888452e3, 1899338400, 1919901600, 1930788e3],\n        offset: [-25196, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200, -21600, -25200]\n    }\n};\n\nvar Timezone = function () {\n    function Timezone(id) {\n        TradingViewTimezone__classCallCheck(this, Timezone);\n\n        if ('Asia/Bahrain' === id) {\n            id = 'Asia/Kuwait';\n        }\n\n        this._name = id;\n\n        var timezone = TIMEZONES[id];\n\n        if (!timezone || timezone.time.length !== timezone.offset.length) {\n            timezone = {\n                time: [],\n                offset: []\n            };\n            this._invalid = true;\n        } else {\n            var times = timezone.time;\n            var offsets = timezone.offset;\n            var length = times.length;\n            var utcs = Array(length);\n\n            for (var index = 0; index < length; index++) {\n                times[index] *= 1e3;\n                offsets[index] *= 1e3;\n                utcs[index] = times[index] - offsets[index];\n            }\n\n            timezone.time_utc = utcs;\n        }\n\n        this.tz = timezone;\n    }\n\n    TradingViewTimezone__createClass(Timezone, [{\n        key: 'offsetUtc',\n        value: function offsetUtc(timestamp) {\n            return Timezone.offset(this.tz.time_utc, this.tz.offset, timestamp);\n        }\n    }], [{\n        key: 'getNowIndex',\n        value: function getNowIndex(times, timestamp) {\n            var leftIndex = void 0;\n            var rightIndex = void 0;\n            var index = void 0;\n            var length = times.length;\n\n            if (0 === length) {\n                return -1;\n            }\n\n            if (isNaN(timestamp)) {\n                throw Error('Key is NaN');\n            }\n\n            for (leftIndex = 0, rightIndex = length - 1, index = Timezone.toInt((leftIndex + rightIndex) / 2);;) {\n                if (times[index] > timestamp) {\n                    if ((rightIndex = index - 1) < leftIndex) {\n                        return index;\n                    }\n                } else if (leftIndex = index + 1, rightIndex < leftIndex) {\n                    return index < length - 1 ? index + 1 : -1;\n                }\n\n                index = Timezone.toInt((leftIndex + rightIndex) / 2);\n            }\n        }\n    }, {\n        key: 'toInt',\n        value: function toInt(value) {\n            return 0 | value;\n        }\n    }, {\n        key: 'get',\n        value: function get(id) {\n            return new Timezone(id);\n        }\n    }, {\n        key: 'offset',\n        value: function offset(times, offsets, timestamp) {\n            var index = Timezone.getNowIndex(times, timestamp);\n\n            return -1 === index ? 0 : offsets[index];\n        }\n    }]);\n\n    return Timezone;\n}();\n\n/* harmony default export */ var TradingViewTimezone = (Timezone);\n// EXTERNAL MODULE: ./src/js/modules/account-settings/tabs/platform-features.consts.js\nvar platform_features_consts = __webpack_require__(75);\n\n// CONCATENATED MODULE: ./src/js/modules/chart/trading-view/TradingViewTimezones.js\n\n\n\n\nvar UTC = 'Etc/UTC';\n\nvar $ = {\n    t: function t() {\n        return undefined;\n    }\n};\n\nvar TradingViewTimezones_TIMEZONES = [{\n    id: 'Pacific/Honolulu',\n    title: $.t('Honolulu'),\n    offset: 0\n}, { id: 'America/Vancouver', title: $.t('Vancouver'), offset: 0 }, {\n    id: 'America/Los_Angeles',\n    title: $.t('Los Angeles'),\n    offset: 0\n}, { id: 'America/Phoenix', title: $.t('Phoenix'), offset: 0 }, {\n    id: 'America/El_Salvador',\n    title: $.t('San Salvador'),\n    offset: 0\n}, { id: 'America/Mexico_City', title: $.t('Mexico City'), offset: 0 }, {\n    id: 'America/Chicago',\n    title: $.t('Chicago'),\n    offset: 0\n}, { id: 'America/Bogota', title: $.t('Bogota'), offset: 0 }, {\n    id: 'America/Toronto',\n    title: $.t('Toronto'),\n    offset: 0\n}, {\n    id: 'America/New_York',\n    title: $.t('New York'), offset: 0\n}, { id: 'America/Caracas', title: $.t('Caracas'), offset: 0 }, {\n    id: 'America/Argentina/Buenos_Aires',\n    title: $.t('Buenos Aires'),\n    offset: 0\n}, { id: 'America/Sao_Paulo', title: $.t('Sao Paulo'), offset: 0 }, {\n    id: 'Europe/London',\n    title: $.t('London'),\n    offset: 0\n}, { id: 'Europe/Madrid', title: $.t('Madrid'), offset: 0 }, {\n    id: 'Europe/Paris',\n    title: $.t('Paris'),\n    offset: 0\n}, { id: 'Europe/Rome', title: $.t('Rome'), offset: 0 }, {\n    id: 'Europe/Belgrade',\n    title: $.t('Belgrade'),\n    offset: 0\n}, { id: 'Europe/Berlin', title: $.t('Berlin'), offset: 0 }, {\n    id: 'Africa/Cairo',\n    title: $.t('Cairo'),\n    offset: 0\n}, { id: 'Europe/Luxembourg', title: $.t('Luxembourg'), offset: 0 }, {\n    id: 'Europe/Warsaw',\n    title: $.t('Warsaw'),\n    offset: 0\n}, { id: 'Europe/Zurich', title: $.t('Zurich'), offset: 0 }, {\n    id: 'Europe/Athens',\n    title: $.t('Athens'),\n    offset: 0\n}, { id: 'Europe/Istanbul', title: $.t('Istanbul'), offset: 0 }, {\n    id: 'Asia/Jerusalem',\n    title: $.t('Jerusalem'),\n    offset: 0\n}, { id: 'Asia/Kuwait', title: $.t('Kuwait'), offset: 0 }, {\n    id: 'Europe/Moscow',\n    title: $.t('Moscow'),\n    offset: 0\n}, { id: 'Asia/Riyadh', title: $.t('Riyadh'), offset: 0 }, {\n    id: 'Asia/Qatar',\n    title: $.t('Qatar'),\n    offset: 0\n}, { id: 'Asia/Tehran', title: $.t('Tehran'), offset: 0 }, {\n    id: 'Asia/Dubai',\n    title: $.t('Dubai'),\n    offset: 0\n}, { id: 'Asia/Muscat', title: $.t('Muscat'), offset: 0 }, {\n    id: 'Asia/Ashkhabad',\n    title: $.t('Ashkhabad'),\n    offset: 0\n}, { id: 'Asia/Kolkata', title: $.t('Kolkata'), offset: 0 }, {\n    id: 'Asia/Almaty',\n    title: $.t('Almaty'),\n    offset: 0\n}, { id: 'Asia/Bangkok', title: $.t('Bangkok'), offset: 0 }, {\n    id: 'Asia/Taipei',\n    title: $.t('Taipei'),\n    offset: 0\n}, { id: 'Asia/Singapore', title: $.t('Singapore'), offset: 0 }, {\n    id: 'Asia/Shanghai',\n    title: $.t('Shanghai'),\n    offset: 0\n}, { id: 'Asia/Chongqing', title: $.t('Chongqing'), offset: 0 }, {\n    id: 'Asia/Hong_Kong',\n    title: $.t('Hong Kong'),\n    offset: 0\n}, { id: 'Asia/Seoul', title: $.t('Seoul'), offset: 0 }, {\n    id: 'Asia/Tokyo',\n    title: $.t('Tokyo'),\n    offset: 0\n}, { id: 'Australia/Brisbane', title: $.t('Brisbane'), offset: 0 }, {\n    id: 'Australia/Adelaide',\n    title: $.t('Adelaide'),\n    offset: 0\n}, { id: 'Australia/Sydney', title: $.t('Sydney'), offset: 0 }, {\n    id: 'Pacific/Auckland',\n    title: $.t('New Zealand'),\n    offset: 0\n}, { id: 'Pacific/Fakaofo', title: $.t('Tokelau'), offset: 0 }, {\n    id: 'Pacific/Chatham',\n    title: $.t('Chatham Islands'),\n    offset: 0\n}];\n\nfor (var index = 0, TradingViewTimezones_length = TradingViewTimezones_TIMEZONES.length, timezone; index < TradingViewTimezones_length; index++) {\n    timezone = TradingViewTimezones_TIMEZONES[index];\n    timezone.offset = TradingViewTimezone.get(timezone.id).offsetUtc(Date.now());\n    delete timezone.title;\n}\n\nTradingViewTimezones_TIMEZONES.sort(function (timezone1, timezone2) {\n    return timezone1.offset - timezone2.offset;\n});\n\n/* harmony default export */ var TradingViewTimezones = (TradingViewTimezones_TIMEZONES);\n\nvar TradingViewTimezones_getAvailableTimezone = function getAvailableTimezone(_ref) {\n    var id = _ref.id,\n        offset = _ref.offset;\n\n    if (id === platform_features_consts[\"GMT\"]) {\n        return UTC;\n    }\n\n    var _timezone = void 0;\n\n    _timezone = underscore[\"findWhere\"](TradingViewTimezones_TIMEZONES, { id: id });\n\n    if (_timezone) {\n        return _timezone.id;\n    }\n\n    _timezone = underscore[\"findWhere\"](TradingViewTimezones_TIMEZONES, { offset: offset });\n\n    if (_timezone) {\n        return _timezone.id;\n    }\n\n    return UTC;\n};\n// EXTERNAL MODULE: ./src/js/store/ui.selectors.js\nvar ui_selectors = __webpack_require__(168);\n\n// CONCATENATED MODULE: ./src/js/modules/deep-links/deep.link.consts.js\nvar PARAM = {\n    PATH: 'path',\n    CHART: 'chart'\n};\n\nvar PATH = {\n    DETAILS: 'details',\n    INDICATORS: 'indicators'\n};\n// CONCATENATED MODULE: ./src/js/modules/deep-links/deep.link.selectors.js\n\n\nvar deep_link_selectors_getDeepLinkPath = function getDeepLinkPath(state, toLowerCase) {\n    var path = state.deepLinks.list[PARAM.PATH];\n\n    return path && toLowerCase ? path.toLowerCase() : path;\n};\n\nvar deep_link_selectors_getDeepLinkChart = function getDeepLinkChart(state) {\n    return state.deepLinks.list[PARAM.CHART];\n};\n// EXTERNAL MODULE: ./src/vendors/charting_library.min.js\nvar charting_library_min = __webpack_require__(2899);\nvar charting_library_min_default = /*#__PURE__*/__webpack_require__.n(charting_library_min);\n\n// EXTERNAL MODULE: ./src/js/modules/server/server.request.js\nvar server_request = __webpack_require__(11);\nvar server_request_default = /*#__PURE__*/__webpack_require__.n(server_request);\n\n// EXTERNAL MODULE: ./src/js/modules/instruments/instruments.utils.js\nvar instruments_utils = __webpack_require__(215);\n\n// EXTERNAL MODULE: ./src/css/trading-view/index.scss\nvar trading_view = __webpack_require__(2900);\nvar trading_view_default = /*#__PURE__*/__webpack_require__.n(trading_view);\n\n// EXTERNAL MODULE: ./src/js/modules/chart/trading-view/ChartTradingView.scss\nvar trading_view_ChartTradingView = __webpack_require__(2901);\nvar ChartTradingView_default = /*#__PURE__*/__webpack_require__.n(trading_view_ChartTradingView);\n\n// EXTERNAL MODULE: ./node_modules/numbro/numbro.js\nvar numbro = __webpack_require__(36);\nvar numbro_default = /*#__PURE__*/__webpack_require__.n(numbro);\n\n// EXTERNAL MODULE: ./src/js/modules/chart/highcharts/trading-editor/editor.js\nvar editor = __webpack_require__(2119);\nvar editor_default = /*#__PURE__*/__webpack_require__.n(editor);\n\n// CONCATENATED MODULE: ./src/js/modules/chart/trading-view/TradingViewLines.js\nvar TradingViewLines__extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n\n\n\n\n\n\n\nvar TradingViewLines_EventListener = underscore[\"extend\"]({}, backbone[\"Events\"]);\n\nvar FONT = 'bold 8pt Lato';\n\n// TODO: move to general colors with other TV colors\nvar COLORS = {\n    POSITION: {\n        MAIN: 'rgb(46, 134, 171)',\n        BACK: {\n            LIGHT: 'rgba(255,255,255,0.75)',\n            DARK: 'rgba(39, 42, 57, 0.75)'\n        },\n        QUANTITY_BACK: 'rgba(46, 134, 171,0.85)',\n        QUANTITY_TEXT: 'rgb(255,255,255)'\n    },\n    ORDER: {\n        MAIN: 'rgb(122, 67, 176)',\n        BACK: {\n            LIGHT: 'rgba(255,255,255,0.75)',\n            DARK: 'rgba(39, 42, 57, 0.75)'\n        },\n        QUANTITY_BACK: 'rgba(122, 67, 176,0.85)',\n        QUANTITY_TEXT: 'rgb(255,255,255)'\n    },\n    TAKE_PROFIT: {\n        MAIN: 'rgb(71,165,70)',\n        BACK: {\n            LIGHT: 'rgba(255,255,255,0.75)',\n            DARK: 'rgba(39, 42, 57, 0.75)'\n        },\n        QUANTITY_BACK: 'rgba(71,165,70,0.85)',\n        QUANTITY_TEXT: 'rgb(255,255,255)'\n    },\n    STOP_LOSS: {\n        MAIN: 'rgb(255,67,61)',\n        BACK: {\n            LIGHT: 'rgba(255,255,255,0.75)',\n            DARK: 'rgba(39, 42, 57, 0.75)'\n        },\n        QUANTITY_BACK: 'rgba(255,67,61,0.85)',\n        QUANTITY_TEXT: 'rgb(255,255,255)'\n    }\n};\n\nvar TradingViewLines_formatPL = function formatPL(value) {\n    return numbro_default()(value).formatForeignCurrency(user_model_default.a.getUserCurrencySymbol(), '$0.00');\n};\n\nvar TradingViewLines_formatQuantity = function formatQuantity(value) {\n    return numbro_default()(Math.abs(value)).format('0,0[.][000]');\n};\n\nvar TradingViewLines_getPositionLineText = function getPositionLineText(position) {\n    return underscore[\"compact\"]([(position.getQuantity() < 0 ? __('actions.sold') : __('actions.bought')) + ': ' + TradingViewLines_formatQuantity(position.getQuantity()), position.getStopLoss() && __('notification.protection.stopLoss') + ' ' + position.getStopLoss().fixedPrice, position.getTakeProfit() && __('notification.protection.takeProfit') + ' ' + position.getTakeProfit().fixedPrice]).join(' | ');\n};\n\nvar TradingViewLines_getOrderLineText = function getOrderLineText(order) {\n    return underscore[\"compact\"]([__('type.' + order.getType().toUpperCase()) + ' ' + __('actions.' + (order.quantity > 0 ? 'buy' : 'sell')), __('order.form.amount.cfd') + ' ' + TradingViewLines_formatQuantity(order.get('quantity')), order.isStopLoss() && __('notification.protection.stopLoss') + ' ' + order.getStopLoss(), order.isTakeProfit() && __('notification.protection.takeProfit') + ' ' + order.getTakeProfit()]).join(' | ');\n};\n\nvar setLineStyles = function setLineStyles(line, colors, theme) {\n    line.setBodyFont(FONT).setQuantityFont(FONT).setLineColor(colors.MAIN).setBodyBorderColor(colors.MAIN).setBodyTextColor(colors.MAIN).setBodyBackgroundColor(colors.BACK[theme]).setQuantityBorderColor(colors.MAIN).setQuantityBackgroundColor(colors.QUANTITY_BACK).setQuantityTextColor(colors.QUANTITY_TEXT);\n\n    if (line.setCancelButtonBorderColor) {\n        line.setCancelButtonBorderColor(colors.MAIN).setCancelButtonBackgroundColor(colors.BACK[theme]).setCancelButtonIconColor(colors.MAIN);\n    }\n\n    if (line.setCloseButtonBorderColor) {\n        line.setCloseButtonBorderColor(colors.MAIN).setCloseButtonBackgroundColor(colors.BACK[theme]).setCloseButtonIconColor(colors.MAIN);\n    }\n};\n\nvar TradingViewLines_createPositionTakeProfitLine = function createPositionTakeProfitLine(tvWidget, instrument, position) {\n    var editPositionModel = editor[\"createEditPositionModel\"](position, instrument);\n\n    var line = tvWidget.chart().createOrderLine().onModify(function () {\n        trading_view_BackboneEventsListener.core.trigger('ui:edit-position', position, true);\n    }).onMove(function () {\n        var takeProfit = this.getPrice();\n\n        this.setPrice(position.getTakeProfit().fixedPrice);\n        trading_view_BackboneEventsListener.core.trigger('ui:edit-position', position, true, { takeProfit: takeProfit });\n    }).onCancel(function () {\n        trading_view_BackboneEventsListener.core.trigger('ui:edit-position', position, true, { takeProfit: false });\n    }).setPrice(position.getTakeProfit().fixedPrice).setText(__('indigo.order.form.take_profit')).setQuantity(TradingViewLines_formatPL(editPositionModel.getProfit()));\n\n    setLineStyles(line, COLORS.TAKE_PROFIT, tvWidget._options.theme);\n\n    editor[\"initEditing\"](TradingViewLines_EventListener, editPositionModel, true, {\n        onChangeProfitForTakeProfit: function onChangeProfitForTakeProfit() {\n            return line.setQuantity(TradingViewLines_formatPL(editPositionModel.getProfit()));\n        }\n    });\n\n    line.remove = underscore[\"wrap\"](line.remove, function (remove) {\n        if (!line._line) {\n            return;\n        }\n\n        editor[\"stopEditing\"](TradingViewLines_EventListener, editPositionModel, true);\n\n        return remove.call(line);\n    });\n\n    return line;\n};\n\nvar TradingViewLines_createPositionStopLossLine = function createPositionStopLossLine(tvWidget, instrument, position) {\n    var editPositionModel = editor[\"createEditPositionModel\"](position, instrument);\n\n    var line = tvWidget.chart().createOrderLine().onModify(function () {\n        trading_view_BackboneEventsListener.core.trigger('ui:edit-position', position, true);\n    }).onMove(function () {\n        var stopLoss = this.getPrice();\n\n        this.setPrice(position.getStopLoss().fixedPrice);\n        trading_view_BackboneEventsListener.core.trigger('ui:edit-position', position, true, { stopLoss: stopLoss });\n    }).onCancel(function () {\n        trading_view_BackboneEventsListener.core.trigger('ui:edit-position', position, true, { stopLoss: false });\n    }).setPrice(position.getStopLoss().fixedPrice).setText(__('indigo.order.form.stop_loss')).setQuantity(TradingViewLines_formatPL(-editPositionModel.getLoss()));\n\n    setLineStyles(line, COLORS.STOP_LOSS, tvWidget._options.theme);\n\n    editor[\"initEditing\"](TradingViewLines_EventListener, editPositionModel, true, {\n        onChangeLossForStopLoss: function onChangeLossForStopLoss() {\n            return line.setQuantity(TradingViewLines_formatPL(-editPositionModel.getLoss()));\n        }\n    });\n\n    line.remove = underscore[\"wrap\"](line.remove, function (remove) {\n        if (!line._line) {\n            return;\n        }\n\n        editor[\"stopEditing\"](TradingViewLines_EventListener, editPositionModel, true);\n\n        return remove.call(line);\n    });\n\n    return line;\n};\n\nvar TradingViewLines_createPositionLine = function createPositionLine(tvWidget, instrument, position) {\n    var line = tvWidget.chart().createPositionLine().onClose(function () {\n        trading_view_BackboneEventsListener.core.trigger('ui:close-position', position, true);\n    }).onModify(function () {\n        trading_view_BackboneEventsListener.core.trigger('ui:edit-position', position, true);\n    }).setPrice(position.getCostBasis()).setText(TradingViewLines_getPositionLineText(position)).setQuantity(position.getPLOpen() && TradingViewLines_formatPL(position.getPLOpen()));\n\n    setLineStyles(line, COLORS.POSITION, tvWidget._options.theme);\n\n    line.remove = underscore[\"wrap\"](line.remove, function (remove) {\n        if (!line._line) {\n            return;\n        }\n\n        if (line.takeProfit) {\n            line.takeProfit.remove();\n\n            delete line.takeProfit;\n        }\n\n        if (line.stopLoss) {\n            line.stopLoss.remove();\n\n            delete line.stopLoss;\n        }\n\n        TradingViewLines_EventListener.stopListening(position, 'remove');\n        TradingViewLines_EventListener.stopListening(position, 'change:plOpen');\n        TradingViewLines_EventListener.stopListening(position, 'change:quantity');\n        TradingViewLines_EventListener.stopListening(position, 'change:takeProfit');\n        TradingViewLines_EventListener.stopListening(position, 'change:stopLoss');\n\n        return remove.call(line);\n    });\n\n    line.changeTheme = function (name) {\n        setLineStyles(line, COLORS.POSITION, name);\n\n        if (line.takeProfit) {\n            setLineStyles(line.takeProfit, COLORS.TAKE_PROFIT, name);\n        }\n\n        if (line.stopLoss) {\n            setLineStyles(line.stopLoss, COLORS.STOP_LOSS, name);\n        }\n    };\n\n    TradingViewLines_EventListener.listenTo(position, 'remove', line.remove);\n    TradingViewLines_EventListener.listenTo(position, 'change:plOpen', function () {\n        return line.setQuantity(TradingViewLines_formatPL(position.getPLOpen()));\n    });\n    TradingViewLines_EventListener.listenTo(position, 'change:quantity', function () {\n        return line.setText(TradingViewLines_getPositionLineText(position));\n    });\n    TradingViewLines_EventListener.listenTo(position, 'change:takeProfit', function () {\n        line.setText(TradingViewLines_getPositionLineText(position));\n\n        if (position.getTakeProfit()) {\n            if (!line.takeProfit) {\n                line.takeProfit = TradingViewLines_createPositionTakeProfitLine(tvWidget, instrument, position);\n            } else {\n                line.takeProfit.setPrice(position.getTakeProfit().fixedPrice);\n            }\n        } else {\n            line.takeProfit.remove();\n\n            delete line.takeProfit;\n        }\n    });\n    TradingViewLines_EventListener.listenTo(position, 'change:stopLoss', function () {\n        line.setText(TradingViewLines_getPositionLineText(position));\n\n        if (position.getStopLoss()) {\n            if (!line.stopLoss) {\n                line.stopLoss = TradingViewLines_createPositionStopLossLine(tvWidget, instrument, position);\n            } else {\n                line.stopLoss.setPrice(position.getStopLoss().fixedPrice);\n            }\n        } else {\n            line.stopLoss.remove();\n\n            delete line.stopLoss;\n        }\n    });\n\n    if (position.getTakeProfit()) {\n        line.takeProfit = TradingViewLines_createPositionTakeProfitLine(tvWidget, instrument, position);\n    }\n\n    if (position.getStopLoss()) {\n        line.stopLoss = TradingViewLines_createPositionStopLossLine(tvWidget, instrument, position);\n    }\n\n    return line;\n};\n\nvar TradingViewLines_createOrderTakeProfitLine = function createOrderTakeProfitLine(tvWidget, instrument, order) {\n    var editOrderModel = editor[\"createEditOrderModel\"](order, instrument);\n\n    var line = tvWidget.chart().createOrderLine().onModify(function () {\n        trading_view_BackboneEventsListener.core.trigger('ui:edit-order', order);\n    }).onMove(function () {\n        var takeProfit = this.getPrice();\n\n        this.setPrice(order.getTakeProfit());\n        trading_view_BackboneEventsListener.core.trigger('ui:edit-order', order, { takeProfit: takeProfit });\n    }).onCancel(function () {\n        trading_view_BackboneEventsListener.core.trigger('ui:edit-order', order, { takeProfit: false });\n    }).setPrice(order.getTakeProfit()).setText(__('indigo.order.form.take_profit')).setQuantity(TradingViewLines_formatPL(editOrderModel.getProfit()));\n\n    setLineStyles(line, COLORS.TAKE_PROFIT, tvWidget._options.theme);\n\n    editor[\"initEditing\"](TradingViewLines_EventListener, editOrderModel, true, {\n        onChangeProfitForTakeProfit: function onChangeProfitForTakeProfit() {\n            return line.setQuantity(TradingViewLines_formatPL(editOrderModel.getProfit()));\n        }\n    });\n\n    line.remove = underscore[\"wrap\"](line.remove, function (remove) {\n        if (!line._line) {\n            return;\n        }\n\n        editor[\"stopEditing\"](TradingViewLines_EventListener, editOrderModel, true);\n\n        return remove.call(line);\n    });\n\n    return line;\n};\n\nvar TradingViewLines_createOrderStopLossLine = function createOrderStopLossLine(tvWidget, instrument, order) {\n    var editOrderModel = editor[\"createEditOrderModel\"](order, instrument);\n\n    var line = tvWidget.chart().createOrderLine().onModify(function () {\n        trading_view_BackboneEventsListener.core.trigger('ui:edit-order', order);\n    }).onMove(function () {\n        var stopLoss = this.getPrice();\n\n        this.setPrice(order.getStopLoss());\n        trading_view_BackboneEventsListener.core.trigger('ui:edit-order', order, { stopLoss: stopLoss });\n    }).onCancel(function () {\n        trading_view_BackboneEventsListener.core.trigger('ui:edit-order', order, { stopLoss: false });\n    }).setPrice(order.getStopLoss()).setText(__('indigo.order.form.stop_loss')).setQuantity(TradingViewLines_formatPL(-editOrderModel.getLoss()));\n\n    setLineStyles(line, COLORS.STOP_LOSS, tvWidget._options.theme);\n\n    editor[\"initEditing\"](TradingViewLines_EventListener, editOrderModel, true, {\n        onChangeLossForStopLoss: function onChangeLossForStopLoss() {\n            return line.setQuantity(TradingViewLines_formatPL(-editOrderModel.getLoss()));\n        }\n    });\n\n    line.remove = underscore[\"wrap\"](line.remove, function (remove) {\n        if (!line._line) {\n            return;\n        }\n\n        editor[\"stopEditing\"](TradingViewLines_EventListener, editOrderModel, true);\n\n        return remove.call(line);\n    });\n\n    return line;\n};\n\nvar TradingViewLines_createOrderLine = function createOrderLine(tvWidget, instrument, order) {\n    var line = tvWidget.chart().createOrderLine().onModify(function () {\n        trading_view_BackboneEventsListener.core.trigger('ui:edit-order', order);\n    }).onMove(function () {\n        var price = this.getPrice();\n        var diff = price - order.getPrice();\n\n        this.setPrice(order.getPrice());\n        trading_view_BackboneEventsListener.core.trigger('ui:edit-order', order, TradingViewLines__extends({\n            price: price\n        }, order.isTakeProfit() && { takeProfit: order.getTakeProfit() + diff }, order.isStopLoss() && { stopLoss: order.getStopLoss() + diff }));\n    }).onCancel(function () {\n        trading_view_BackboneEventsListener.core.trigger('ui:cancel-order', order);\n    }).setPrice(order.getPrice()).setText(TradingViewLines_getOrderLineText(order)).setQuantity('/');\n\n    setLineStyles(line, COLORS.ORDER, tvWidget._options.theme);\n\n    line.remove = underscore[\"wrap\"](line.remove, function (remove) {\n        if (!line._line) {\n            return;\n        }\n\n        if (line.takeProfit) {\n            line.takeProfit.remove();\n\n            delete line.takeProfit;\n        }\n\n        if (line.stopLoss) {\n            line.stopLoss.remove();\n\n            delete line.stopLoss;\n        }\n\n        TradingViewLines_EventListener.stopListening(order, 'remove');\n        TradingViewLines_EventListener.stopListening(order, 'change:stopLimitPrice change:modifiedTime');\n        TradingViewLines_EventListener.stopListening(order, 'change:quantity');\n        TradingViewLines_EventListener.stopListening(order, 'change:takeProfit');\n        TradingViewLines_EventListener.stopListening(order, 'change:stopLoss');\n\n        return remove.call(line);\n    });\n\n    line.changeTheme = function (name) {\n        setLineStyles(line, COLORS.ORDER, name);\n\n        if (line.takeProfit) {\n            setLineStyles(line.takeProfit, COLORS.TAKE_PROFIT, name);\n        }\n\n        if (line.stopLoss) {\n            setLineStyles(line.stopLoss, COLORS.STOP_LOSS, name);\n        }\n    };\n\n    TradingViewLines_EventListener.listenTo(order, 'remove', line.remove);\n    TradingViewLines_EventListener.listenTo(order, 'change:stopLimitPrice change:modifiedTime', function () {\n        return line.setPrice(order.getPrice());\n    });\n    TradingViewLines_EventListener.listenTo(order, 'change:quantity', function () {\n        return line.setText(TradingViewLines_getOrderLineText(order));\n    });\n    TradingViewLines_EventListener.listenTo(order, 'change:takeProfit', function () {\n        line.setText(TradingViewLines_getOrderLineText(order));\n\n        if (order.isTakeProfit()) {\n            if (!line.takeProfit) {\n                line.takeProfit = TradingViewLines_createOrderTakeProfitLine(tvWidget, instrument, order);\n            } else {\n                line.takeProfit.setPrice(order.getTakeProfit());\n            }\n        } else {\n            line.takeProfit.remove();\n\n            delete line.takeProfit;\n        }\n    });\n    TradingViewLines_EventListener.listenTo(order, 'change:stopLoss', function () {\n        line.setText(TradingViewLines_getOrderLineText(order));\n\n        if (order.isStopLoss()) {\n            if (!line.stopLoss) {\n                line.stopLoss = TradingViewLines_createOrderStopLossLine(tvWidget, instrument, order);\n            } else {\n                line.stopLoss.setPrice(order.getStopLoss());\n            }\n        } else {\n            line.stopLoss.remove();\n\n            delete line.stopLoss;\n        }\n    });\n\n    if (order.isTakeProfit()) {\n        line.takeProfit = TradingViewLines_createOrderTakeProfitLine(tvWidget, instrument, order);\n    }\n\n    if (order.isStopLoss()) {\n        line.stopLoss = TradingViewLines_createOrderStopLossLine(tvWidget, instrument, order);\n    }\n\n    return line;\n};\n// EXTERNAL MODULE: ./src/js/common.types.js\nvar common_types = __webpack_require__(13);\n\n// EXTERNAL MODULE: ./src/js/modules/new-order/types.js\nvar types = __webpack_require__(54);\nvar types_default = /*#__PURE__*/__webpack_require__.n(types);\n\n// CONCATENATED MODULE: ./src/js/modules/chart/trading-view/components/ChartTradingView.js\nvar ChartTradingView__extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar ChartTradingView__createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction ChartTradingView__defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction ChartTradingView__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar CHART_REF_KEY = 'tvWidget';\n\nvar MOBILE_LANDSCAPE = 'mobile-landscape';\nvar MOBILE_PORTRAIT = 'mobile-portrait';\n\nvar MIN_VIEWPORT_HEIGHT = 500;\nvar CHART_NAME = 'main';\n\nvar Loading = react_default.a.createElement(\n    'div',\n    { className: 'loading-container loading-absolute loading-translucent-2' },\n    react_default.a.createElement(\n        'div',\n        { className: 'loading-box' },\n        react_default.a.createElement(\n            'div',\n            { className: 'loading-content' },\n            react_default.a.createElement(\n                'div',\n                { className: 'cssload-jumping' },\n                react_default.a.createElement('span', null),\n                react_default.a.createElement('span', null),\n                react_default.a.createElement('span', null)\n            )\n        )\n    )\n);\n\nvar ChartTradingView_ChartTradingView = function (_React$Component) {\n    _inherits(ChartTradingView, _React$Component);\n\n    function ChartTradingView(props) {\n        ChartTradingView__classCallCheck(this, ChartTradingView);\n\n        var _this = _possibleConstructorReturn(this, (ChartTradingView.__proto__ || Object.getPrototypeOf(ChartTradingView)).call(this, props));\n\n        _this.initTradings = function (instrument) {\n            if (settings_default.a.isChartTradingViewTradingLinesEnabled()) {\n                _this._backboneEventsListener.listenTo(instrument.getPositions(), 'add', function (position) {\n                    return TradingViewLines_createPositionLine(_this.tvWidget, instrument, position);\n                });\n                _this._backboneEventsListener.listenTo(instrument.getOrders(), 'add', function (order) {\n                    return TradingViewLines_createOrderLine(_this.tvWidget, instrument, order);\n                });\n\n                _this.initPositions(instrument);\n                _this.initOrders(instrument);\n            }\n        };\n\n        react_autobind_default()(_this);\n\n        _this.state = {\n            ready: false,\n            minimized: device_default.a.mobile() && device_default.a.portrait() && window.innerHeight < MIN_VIEWPORT_HEIGHT\n        };\n        return _this;\n    }\n\n    ChartTradingView__createClass(ChartTradingView, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            var _this2 = this;\n\n            this._mounted = true;\n            this.symbol = ChartTradingView.getSelectedInstrumentSymbol();\n\n            var _props = this.props,\n                clientId = _props.client_id,\n                userId = _props.user_id;\n\n\n            server_request_default.a.getTradingViewSavedCharts(clientId, userId).then(function (_ref) {\n                var chartsResp = _ref.data;\n\n                if (!chartsResp.data || chartsResp.data.length === 0) {\n                    _this2.initTradingViewWidget();\n\n                    return;\n                }\n\n                var savedCharts = underscore[\"sortBy\"](chartsResp.data, 'timestamp');\n\n                underscore[\"each\"](underscore[\"initial\"](savedCharts), function (chart) {\n                    return server_request_default.a.deleteTradingViewSavedChart(clientId, userId, chart.id);\n                });\n\n                server_request_default.a.getTradingViewSavedChart(clientId, userId, underscore[\"last\"](savedCharts).id).then(function (_ref2) {\n                    var chartResp = _ref2.data;\n\n                    var chartContent = JSON.parse(chartResp.data.content);\n                    var savedData = JSON.parse(chartContent.content);\n\n                    delete savedData.charts[0].timezone;\n\n                    var style = void 0;\n\n                    for (var paneIndex = 0, panes = savedData.charts[0].panes, panesLength = panes.length; paneIndex < panesLength; paneIndex++) {\n                        for (var sourceIndex = 0, sources = panes[paneIndex].sources, sourcesLength = sources.length; sourceIndex < sourcesLength; sourceIndex++) {\n                            if (sources[sourceIndex].type === 'MainSeries') {\n                                sources[sourceIndex].state.symbol = _this2.symbol;\n                                style = sources[sourceIndex].state.style;\n\n                                var deepLinkInterval = ChartTradingView.getDeepLinkInterval();\n\n                                if (deepLinkInterval) {\n                                    sources[sourceIndex].state.interval = deepLinkInterval;\n                                }\n\n                                if (!RESOLUTION_TO_PERIOD_MAP[sources[sourceIndex].state.interval]) {\n                                    sources[sourceIndex].state.interval = _this2.props.interval;\n                                }\n                            }\n                        }\n                    }\n\n                    _this2.initTradingViewWidget(savedData, style);\n                });\n            });\n        }\n    }, {\n        key: 'initTradingViewWidget',\n        value: function initTradingViewWidget(savedData, style) {\n            if (!this._mounted) {\n                return;\n            }\n\n            this.tvDatafeed = new trading_view_TradingViewDatafeed();\n            this.theme = themes_dispatcher_default.a.isLightTheme() ? THEMES.LIGHT : THEMES.DARK;\n\n            this.tvWidget = new charting_library_min[\"widget\"](ChartTradingView__extends({}, this.props, {\n                symbol: this.symbol,\n                container_id: this.refs[CHART_REF_KEY].id,\n                datafeed: this.tvDatafeed,\n                theme: this.theme,\n                overrides: ChartTradingView__extends({}, OVERRIDES[this.theme], style && { 'mainSeriesProperties.style': style }),\n                studies_overrides: STUDIES_OVERRIDES[this.theme],\n                loading_screen: {\n                    backgroundColor: LOADING_BACKGROUND[this.theme]\n                }\n            }, device_default.a.mobile() && {\n                disabled_features: [].concat(_toConsumableArray(this.props.disabled_features), _toConsumableArray(FEATURES.MOBILE.DISABLED))\n            }, savedData && {\n                saved_data: savedData\n            }, !savedData && {\n                interval: ChartTradingView.getDeepLinkInterval() || this.props.interval\n            }));\n\n            this.tvWidget.onChartReady(this.onChartReady);\n        }\n    }, {\n        key: 'onChartReady',\n        value: function onChartReady() {\n            var _this3 = this;\n\n            var tvDocument = this.tvWidget._innerWindow().document.documentElement;\n\n            fixUI(tvDocument);\n\n            this.updateIntervalDropdown();\n\n            if (device_default.a.mobile()) {\n                collapseTooltip(tvDocument);\n                this.initOrientationHandler();\n            }\n\n            this.changeTheme(this.theme);\n\n            this.tvWidget.onContextMenu(this.onContextMenu);\n\n            this.setState({ ready: true });\n\n            if (deep_link_selectors_getDeepLinkPath(store.getState(), true) === PATH.INDICATORS) {\n                tvDocument.querySelector('#header-toolbar-indicators').click();\n            }\n\n            this.tvWidget.subscribe('onAutoSaveNeeded', function () {\n                _this3.save();\n            });\n\n            this.tvWidget.chart().onSymbolChanged().subscribe(null, function (_ref3) {\n                var _symbol = _ref3.ticker;\n\n                _this3.save();\n            });\n\n            this.tvWidget.chart().onIntervalChanged().subscribe(null, function (_interval) {\n                _this3.save();\n                _this3.updateIntervalDropdown();\n            });\n\n            this._backboneEventsListener = trading_view_BackboneEventsListener.create({\n                onThemeChanged: function onThemeChanged(name) {\n                    _this3.changeTheme(name);\n\n                    underscore[\"each\"](_this3.positions, function (position) {\n                        return position.changeTheme(name);\n                    });\n                    underscore[\"each\"](_this3.orders, function (order) {\n                        return order.changeTheme(name);\n                    });\n                },\n                onInstrumentRowSelected: function onInstrumentRowSelected(_symbol, _instrument, _ref4) {\n                    var _showPositions = _ref4.showAllOpenPositions,\n                        _showOrders = _ref4.showAllOrders;\n\n                    _this3.tvWidget.activeChart().setSymbol(_symbol, function () {\n                        _this3.save();\n                        _this3.initTradings(_instrument);\n                    });\n                },\n                onInstrumentSubrowSelected: function onInstrumentSubrowSelected(_symbol, _instrument, _ref5) {\n                    var _showPositions = _ref5.showAllOpenPositions,\n                        _showOrders = _ref5.showAllOrders;\n\n                    _this3.tvWidget.setSymbol(_symbol, _this3.tvWidget.symbolInterval().interval, function () {\n                        _this3.save();\n                    });\n                }\n            });\n\n            this.initTradings(instruments_default.a.getInstrumentBySymbol(this.tvWidget.symbolInterval().symbol));\n        }\n    }, {\n        key: 'onContextMenu',\n        value: function onContextMenu(timestamp, price) {\n            if (!price) {\n                return;\n            }\n\n            var _tvWidget$symbolInter = this.tvWidget.symbolInterval(),\n                symbol = _tvWidget$symbolInter.symbol,\n                resolution = _tvWidget$symbolInter.interval;\n\n            var subscription = this.tvDatafeed.getSubscription(symbol, resolution);\n\n            if (subscription) {\n\n                var lastPrice = subscription.getLastCandle().close;\n                var instrument = subscription.getInstrument();\n                var displayName = instrument.getDisplayName();\n                var precision = instrument.getPrecision();\n                var selectedPrice = price.toFixed(precision);\n\n                var menu = [];\n\n                var buyTradable = Object(instruments_utils[\"g\" /* isBuyTradable */])(symbol);\n                var sellTradable = Object(instruments_utils[\"l\" /* isSellTradable */])(symbol);\n\n                if (+selectedPrice < lastPrice) {\n                    if (buyTradable) {\n                        menu.push({\n                            position: 'top',\n                            text: __('actions.buy') + ' ' + displayName + ' ' + __('type.LIMIT') + ' ' + selectedPrice,\n                            click: function click() {\n                                ChartTradingView.trade(symbol, {\n                                    direction: common_types[\"BUY\"],\n                                    type: types[\"TYPE_LIMIT\"],\n                                    entry: selectedPrice\n                                });\n                            }\n                        });\n                    }\n\n                    if (sellTradable) {\n                        menu.push({\n                            position: 'top',\n                            text: __('actions.sell') + ' ' + displayName + ' ' + __('type.STOP') + ' ' + selectedPrice,\n                            click: function click() {\n                                ChartTradingView.trade(symbol, {\n                                    direction: common_types[\"SELL\"],\n                                    type: types[\"TYPE_STOP\"],\n                                    entry: selectedPrice\n                                });\n                            }\n                        });\n                    }\n                } else if (+selectedPrice > lastPrice) {\n                    if (sellTradable) {\n                        menu.push({\n                            position: 'top',\n                            text: __('actions.sell') + ' ' + displayName + ' ' + __('type.LIMIT') + ' ' + selectedPrice,\n                            click: function click() {\n                                ChartTradingView.trade(symbol, {\n                                    direction: common_types[\"SELL\"],\n                                    type: types[\"TYPE_LIMIT\"],\n                                    entry: selectedPrice\n                                });\n                            }\n                        });\n                    }\n\n                    if (buyTradable) {\n                        menu.push({\n                            position: 'top',\n                            text: __('actions.buy') + ' ' + displayName + ' ' + __('type.STOP') + ' ' + selectedPrice,\n                            click: function click() {\n                                ChartTradingView.trade(symbol, {\n                                    direction: common_types[\"BUY\"],\n                                    type: types[\"TYPE_STOP\"],\n                                    entry: selectedPrice\n                                });\n                            }\n                        });\n                    }\n                }\n\n                if (buyTradable) {\n                    menu.push({\n                        position: 'top',\n                        text: __('actions.buy') + ' ' + displayName + ' ' + __('type.MARKET'),\n                        click: function click() {\n                            ChartTradingView.trade(symbol, {\n                                direction: common_types[\"BUY\"]\n                            });\n                        }\n                    });\n                }\n\n                if (sellTradable) {\n                    menu.push({\n                        position: 'top',\n                        text: __('actions.sell') + ' ' + displayName + ' ' + __('type.MARKET'),\n                        click: function click() {\n                            ChartTradingView.trade(symbol, {\n                                direction: common_types[\"SELL\"]\n                            });\n                        }\n                    });\n                }\n\n                if (menu.length > 0) {\n                    menu.push({ text: '-', position: 'top' });\n                }\n\n                return menu;\n            }\n        }\n    }, {\n        key: 'updateIntervalDropdown',\n        value: function updateIntervalDropdown() {\n            this.setState({\n                period: RESOLUTION_TO_PERIOD_MAP[this.tvWidget.symbolInterval().interval]\n            });\n        }\n    }, {\n        key: 'onOrientationChanged',\n        value: function onOrientationChanged() {\n            var tvDocument = this.tvWidget._innerWindow().document.documentElement;\n\n            if (device_default.a.portrait()) {\n                tvDocument.classList.replace(MOBILE_PORTRAIT, MOBILE_LANDSCAPE);\n            } else {\n                tvDocument.classList.replace(MOBILE_LANDSCAPE, MOBILE_PORTRAIT);\n            }\n        }\n    }, {\n        key: 'initOrientationHandler',\n        value: function initOrientationHandler() {\n            var orieantationHadler = this.onOrientationChanged;\n            var orientationEvent = Object.prototype.hasOwnProperty.call(window, 'onorientationchange') ? 'orientationchange' : 'resize';\n\n            if (window.addEventListener) {\n                window.addEventListener(orientationEvent, orieantationHadler, false);\n            } else if (window.attachEvent) {\n                window.attachEvent(orientationEvent, orieantationHadler);\n            } else {\n                window[orientationEvent] = orieantationHadler;\n            }\n\n            var tvDocument = this.tvWidget._innerWindow().document.documentElement;\n\n            tvDocument.classList.add(device_default.a.landscape() ? MOBILE_LANDSCAPE : MOBILE_PORTRAIT);\n        }\n    }, {\n        key: 'save',\n        value: function save() {\n            this.tvWidget.saveChartToServer(function () {}, function () {}, false, {\n                chartName: CHART_NAME\n            });\n        }\n    }, {\n        key: 'changeTheme',\n        value: function changeTheme(theme) {\n            this.tvWidget.changeTheme(theme);\n            this.tvWidget.applyOverrides(OVERRIDES[theme]);\n            this.tvWidget.applyStudiesOverrides(STUDIES_OVERRIDES[theme]);\n        }\n    }, {\n        key: 'componentWillUnmount',\n        value: function componentWillUnmount() {\n            this._mounted = false;\n\n            if (this._backboneEventsListener) {\n                this._backboneEventsListener.destroy();\n                this._backboneEventsListener = null;\n            }\n\n            if (this.tvDatafeed) {\n                this.tvDatafeed.destroy();\n                this.tvDatafeed = null;\n            }\n\n            underscore[\"each\"](this.positions, function (position) {\n                return position.remove();\n            });\n            underscore[\"each\"](this.orders, function (orders) {\n                return orders.remove();\n            });\n\n            if (this.tvWidget) {\n                if (!this.tvWidget._getIFrameElement().contentWindow.ChartApiInstance) {\n                    this.tvWidget._getIFrameElement().contentWindow.ChartApiInstance = {\n                        destroy: function destroy() {}\n                    };\n                }\n\n                if (!this.tvWidget._getIFrameElement().contentWindow.destroyChart) {\n                    this.tvWidget._getIFrameElement().contentWindow.destroyChart = function () {};\n                }\n\n                this.tvWidget.remove();\n                this.tvWidget = null;\n            }\n        }\n    }, {\n        key: 'minimize',\n        value: function minimize() {\n            this.setState({\n                minimized: true\n            });\n        }\n    }, {\n        key: 'restoreSize',\n        value: function restoreSize() {\n            this.setState({\n                minimized: false\n            });\n        }\n    }, {\n        key: 'changeInterval',\n        value: function changeInterval(period) {\n            this.tvWidget.setSymbol(this.tvWidget.symbolInterval().symbol, PERIOD_TO_RESOLUTION_MAP[period]);\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _state = this.state,\n                ready = _state.ready,\n                minimized = _state.minimized,\n                period = _state.period;\n            var _props2 = this.props,\n                height = _props2.height,\n                className = _props2.className;\n\n            var classes = classSet_default()(ChartTradingView__defineProperty({\n                'chart-box': true,\n                'chart-trading-view': true,\n                'minimized': minimized\n            }, className, !!className));\n            var styles = {};\n\n            if (height) {\n                styles = {\n                    height: height + 'px',\n                    minHeight: height + 'px',\n                    maxHeight: height + 'px'\n                };\n            }\n\n            return react_default.a.createElement(\n                'div',\n                { className: classes, style: styles },\n                !ready && Loading,\n                device_default.a.mobile() && [react_default.a.createElement(\n                    'div',\n                    { className: 'minimize-chart hidden-minimized hidden-landscape',\n                        key: 'minimize-chart',\n                        onClick: this.minimize },\n                    react_default.a.createElement('i', { className: 'icon-double-arrow-down ' })\n                ), react_default.a.createElement(Dropdown[\"a\" /* default */], { className: 'change-interval hidden-minimized hidden-landscape',\n                    as: 'div',\n                    name: 'chart-interval',\n                    key: 'chart-interval',\n                    selected: period,\n                    transformOptionText: function transformOptionText(item) {\n                        return item;\n                    },\n                    options: underscore[\"keys\"](PERIOD_TO_RESOLUTION_MAP),\n                    onChange: this.changeInterval }), react_default.a.createElement(\n                    'div',\n                    { className: 'restore-size-chart visible-minimized hidden-landscape',\n                        key: 'restore-size-chart',\n                        onClick: this.restoreSize },\n                    react_default.a.createElement(\n                        'div',\n                        null,\n                        react_default.a.createElement('i', { className: 'icon-double-arrow-up' })\n                    )\n                )],\n                react_default.a.createElement('div', { id: underscore[\"uniqueId\"]('chart-trading-view-'), ref: CHART_REF_KEY,\n                    className: 'chart-trading-view-container hidden-minimized'\n                })\n            );\n        }\n    }, {\n        key: 'initOrders',\n        value: function initOrders(instrument) {\n            var _this4 = this;\n\n            underscore[\"each\"](this.orders, function (order) {\n                return order.remove();\n            });\n\n            this.orders = underscore[\"map\"](instrument.getOrders().models, function (order) {\n                return TradingViewLines_createOrderLine(_this4.tvWidget, instrument, order);\n            });\n        }\n    }, {\n        key: 'initPositions',\n        value: function initPositions(instrument) {\n            var _this5 = this;\n\n            underscore[\"each\"](this.positions, function (position) {\n                return position.remove();\n            });\n\n            this.positions = underscore[\"map\"](instrument.getPositions().models, function (position) {\n                return TradingViewLines_createPositionLine(_this5.tvWidget, instrument, position);\n            });\n        }\n    }], [{\n        key: 'getSelectedInstrumentSymbol',\n        value: function getSelectedInstrumentSymbol() {\n            return Object(ui_selectors[\"getUiSelectedInstrumentCategorySymbol\"])(store.getState());\n        }\n    }, {\n        key: 'getDeepLinkInterval',\n        value: function getDeepLinkInterval() {\n            var deepLinkPath = deep_link_selectors_getDeepLinkPath(store.getState(), true);\n\n            if (deepLinkPath === PATH.DETAILS) {\n                var deepLinkChart = deep_link_selectors_getDeepLinkChart(store.getState());\n\n                if (deepLinkChart) {\n                    return PERIOD_TO_RESOLUTION_MAP[deepLinkChart.toLowerCase()];\n                }\n            }\n        }\n    }, {\n        key: 'trade',\n        value: function trade(symbol) {\n            var properties = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n            if (properties.direction === common_types[\"BUY\"] && Object(instruments_utils[\"g\" /* isBuyTradable */])(symbol)) {\n                core_default.a.trigger('ui:new-position', ChartTradingView__extends({ symbolOrId: symbol }, properties));\n            } else if (properties.direction === common_types[\"SELL\"] && Object(instruments_utils[\"l\" /* isSellTradable */])(symbol)) {\n                core_default.a.trigger('ui:new-position', ChartTradingView__extends({ symbolOrId: symbol }, properties));\n            }\n        }\n    }]);\n\n    return ChartTradingView;\n}(react_default.a.Component);\n\nChartTradingView_ChartTradingView.defaultProps = {\n    autosize: true,\n    disabled_features: FEATURES.DISABLED,\n    enabled_features: FEATURES.ENABLED,\n    interval: '5',\n    library_path: 'tv/',\n    locale: localization[\"getCurrentLanguage\"]() || 'en',\n    charts_storage_url: 'https://saveload.tradingview.com',\n    client_id: Object(sha1[\"default\"])(settings_default.a.getBrandName()),\n    user_id: Object(sha1[\"default\"])(user_model_default.a.getCustomerId()),\n    charts_storage_api_version: '1.1',\n    auto_save_delay: 3,\n    link_to_tradingview: false,\n    timezone: TradingViewTimezones_getAvailableTimezone(user_model_default.a.getUserCommonData().getUserTimezoneObject()),\n    custom_css_url: '' + window.location.origin + window.location.pathname + '/' + trading_view_default.a,\n    time_frames: [{ text: '1d', resolution: '1', description: '1 Day' }, { text: '5d', resolution: '5', description: '5 Days' }, { text: '1m', resolution: '30', description: '1 Month' }, { text: '3m', resolution: '60', description: '3 Months' }, { text: '6m', resolution: '120', description: '6 Months' }, { text: '1y', resolution: 'D', description: '1 Year' }, { text: '5y', resolution: 'W', description: '5 Years' }]\n};\n\n\n/* harmony default export */ var components_ChartTradingView = __webpack_exports__[\"default\"] = (ChartTradingView_ChartTradingView);\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/modules/chart/trading-view/components/ChartTradingView.js + 8 modules\n// module id = 2235\n// module chunks = 88\n\n//# sourceURL=webpack:///./src/js/modules/chart/trading-view/components/ChartTradingView.js_+_8_modules?");

/***/ }),

/***/ 2720:
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(26)(undefined);\n// imports\n\n\n// module\nexports.push([module.i, \".chart-trading-view .loading-container{z-index:3}.chart-trading-view .change-interval,.chart-trading-view .minimize-chart{z-index:2}.chart-trading-view .chart-trading-view-container{position:absolute;top:0;bottom:0;left:0;right:0;bottom:-6px;z-index:1}@media (max-width:824px){.chart-trading-view .change-interval{position:absolute;top:5px;left:5px}.chart-trading-view .change-interval .field-type-select__title{display:none}.chart-trading-view .change-interval select{padding:0 1.5em 0 .5em;font-size:13px;font-weight:700;line-height:13px;text-transform:uppercase;outline:none;height:24px}.chart-trading-view .minimize-chart,.chart-trading-view .restore-size-chart{position:absolute;top:-20px;right:50%;-webkit-transform:translateX(50%);transform:translateX(50%);border:20px solid transparent!important;box-sizing:content-box}}@media (max-width:824px) and (orientation:portrait){.chart-trading-view{overflow:hidden}.chart-trading-view.minimized .hidden-minimized,.chart-trading-view:not(.minimized) .restore-size-chart{display:none}.chart-trading-view .chart-trading-view-container{top:-38px;bottom:-22px}}@media (max-width:824px) and (orientation:landscape){.chart-trading-view{z-index:8000}.chart-trading-view .hidden-landscape{display:none}.chart-trading-view .chart-trading-view-container{position:fixed;top:0!important;bottom:0!important}}\", \"\"]);\n\n// exports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?minimize!./node_modules/postcss-loader/lib!./node_modules/sass-loader/lib/loader.js!./src/js/modules/chart/trading-view/ChartTradingView.scss\n// module id = 2720\n// module chunks = 88\n\n//# sourceURL=webpack:///./src/js/modules/chart/trading-view/ChartTradingView.scss?./node_modules/css-loader?minimize!./node_modules/postcss-loader/lib!./node_modules/sass-loader/lib/loader.js");

/***/ }),

/***/ 2899:
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n!function (t, e) {\n  \"object\" == ( false ? \"undefined\" : _typeof(exports)) && \"undefined\" != typeof module ? e(exports) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (e),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : e(t.TradingView = t.TradingView || {});\n}(this, function (t) {\n  \"use strict\";\n  function e(t, o) {\n    var i = n({}, t);for (var s in o) {\n      \"object\" != _typeof(t[s]) || null === t[s] || Array.isArray(t[s]) ? void 0 !== o[s] && (i[s] = o[s]) : i[s] = e(t[s], o[s]);\n    }return i;\n  }function o() {\n    return \"1.13 (internal id aa006190 @ 2019-01-16 10:01:55.489690)\";\n  }function i(t) {\n    window.addEventListener(\"DOMContentLoaded\", t, !1);\n  }var n = Object.assign || function (t) {\n    for (var e, o = arguments, i = 1, n = arguments.length; i < n; i++) {\n      e = o[i];for (var s in e) {\n        Object.prototype.hasOwnProperty.call(e, s) && (t[s] = e[s]);\n      }\n    }return t;\n  },\n      s = { mobile: { disabled_features: [\"left_toolbar\", \"header_widget\", \"timeframes_toolbar\", \"edit_buttons_in_legend\", \"context_menus\", \"control_bar\", \"border_around_the_chart\"], enabled_features: [] } },\n      r = { width: 800, height: 500, symbol: \"AA\", interval: \"D\", timezone: \"Etc/UTC\", container_id: \"\", library_path: \"\", locale: \"en\", widgetbar: { details: !1, watchlist: !1, watchlist_settings: { default_symbols: [] } }, overrides: { \"mainSeriesProperties.showCountdown\": !1 }, studies_overrides: {}, brokerConfig: { configFlags: {} }, fullscreen: !1, autosize: !1, disabled_features: [], enabled_features: [], debug: !1, logo: {}, time_frames: [{ text: \"5y\", resolution: \"W\" }, { text: \"1y\", resolution: \"W\" }, { text: \"6m\", resolution: \"120\" }, { text: \"3m\", resolution: \"60\" }, { text: \"1m\", resolution: \"30\" }, { text: \"5d\", resolution: \"5\" }, { text: \"1d\", resolution: \"1\" }], client_id: \"0\", user_id: \"0\", charts_storage_api_version: \"1.0\", favorites: { intervals: [], chartTypes: [] } },\n      a = function () {\n    function t(t) {\n      if (this._id = \"tradingview_\" + (1048576 * (1 + Math.random()) | 0).toString(16).substring(1), this._ready = !1, this._readyHandlers = [], this._onWindowResize = this._autoResizeChart.bind(this), !t.datafeed) throw new Error(\"Datafeed is not defined\");if (this._options = e(r, t), t.preset) {\n        var o = s[t.preset];o ? (void 0 !== this._options.disabled_features ? this._options.disabled_features = this._options.disabled_features.concat(o.disabled_features) : this._options.disabled_features = o.disabled_features, void 0 !== this._options.enabled_features ? this._options.enabled_features = this._options.enabled_features.concat(o.enabled_features) : this._options.enabled_features = o.enabled_features) : console.warn(\"Unknown preset: `\" + t.preset + \"`\");\n      }\"Dark\" === this._options.theme && void 0 === this._options.loading_screen && (this._options.loading_screen = { backgroundColor: \"#131722\" }), this._create();\n    }return t.prototype.onChartReady = function (t) {\n      this._ready ? t.call(this) : this._readyHandlers.push(t);\n    }, t.prototype.onGrayedObjectClicked = function (t) {\n      this._innerAPI().onGrayedObjectClicked(t);\n    }, t.prototype.onShortcut = function (t, e) {\n      this._innerWindow().createShortcutAction(t, e);\n    }, t.prototype.subscribe = function (t, e) {\n      this._innerAPI().subscribe(t, e);\n    }, t.prototype.unsubscribe = function (t, e) {\n      this._innerAPI().unsubscribe(t, e);\n    }, t.prototype.chart = function (t) {\n      return this._innerAPI().chart(t);\n    }, t.prototype.setLanguage = function (t) {\n      this.remove(), this._options.locale = t, this._create();\n    }, t.prototype.setSymbol = function (t, e, o) {\n      this._innerAPI().changeSymbol(t, e + \"\", o);\n    }, t.prototype.remove = function () {\n      window.removeEventListener(\"resize\", this._onWindowResize), this._readyHandlers.splice(0, this._readyHandlers.length), delete window[this._id];var t = this._getIFrameElement();t.contentWindow.destroyChart(), t.parentNode && t.parentNode.removeChild(t);\n    }, t.prototype.closePopupsAndDialogs = function () {\n      this._innerAPI().closePopupsAndDialogs();\n    }, t.prototype.selectLineTool = function (t) {\n      this._innerAPI().selectLineTool(t);\n    }, t.prototype.selectedLineTool = function () {\n      return this._innerAPI().selectedLineTool();\n    }, t.prototype.save = function (t) {\n      this._innerAPI().saveChart(t);\n    }, t.prototype.load = function (t, e) {\n      this._innerAPI().loadChart({ json: t, extendedData: e });\n    }, t.prototype.getSavedCharts = function (t) {\n      this._innerAPI().getSavedCharts(t);\n    }, t.prototype.loadChartFromServer = function (t) {\n      this._innerAPI().loadChartFromServer(t);\n    }, t.prototype.saveChartToServer = function (t, e, o, i) {\n      this._innerAPI().saveChartToServer(t, e, o, i);\n    }, t.prototype.removeChartFromServer = function (t, e) {\n      this._innerAPI().removeChartFromServer(t, e);\n    }, t.prototype.onContextMenu = function (t) {\n      this._innerAPI().onContextMenu(t);\n    }, t.prototype.createButton = function (t) {\n      return this._innerWindow().createButton(t);\n    }, t.prototype.showNoticeDialog = function (t) {\n      this._innerAPI().showNoticeDialog(t);\n    }, t.prototype.showConfirmDialog = function (t) {\n      this._innerAPI().showConfirmDialog(t);\n    }, t.prototype.showLoadChartDialog = function () {\n      this._innerAPI().showLoadChartDialog();\n    }, t.prototype.showSaveAsChartDialog = function () {\n      this._innerAPI().showSaveAsChartDialog();\n    }, t.prototype.symbolInterval = function () {\n      return this._innerAPI().getSymbolInterval();\n    }, t.prototype.mainSeriesPriceFormatter = function () {\n      return this._innerAPI().mainSeriesPriceFormatter();\n    }, t.prototype.getIntervals = function () {\n      return this._innerAPI().getIntervals();\n    }, t.prototype.getStudiesList = function () {\n      return this._innerAPI().getStudiesList();\n    }, t.prototype.addCustomCSSFile = function (t) {\n      this._innerWindow().addCustomCSSFile(t);\n    }, t.prototype.applyOverrides = function (t) {\n      this._options = e(this._options, { overrides: t }), this._innerWindow().applyOverrides(t);\n    }, t.prototype.applyStudiesOverrides = function (t) {\n      this._innerWindow().applyStudiesOverrides(t);\n    }, t.prototype.watchList = function () {\n      return this._innerAPI().watchlist();\n    }, t.prototype.activeChart = function () {\n      return this._innerAPI().activeChart();\n    }, t.prototype.chartsCount = function () {\n      return this._innerAPI().chartsCount();\n    }, t.prototype.layout = function () {\n      return this._innerAPI().layout();\n    }, t.prototype.setLayout = function (t) {\n      this._innerAPI().setLayout(t);\n    }, t.prototype.changeTheme = function (t) {\n      this._innerWindow().changeTheme(t);\n    }, t.prototype.takeScreenshot = function () {\n      this._innerAPI().takeScreenshot();\n    }, t.prototype.lockAllDrawingTools = function () {\n      return this._innerAPI().lockAllDrawingTools();\n    }, t.prototype._getIFrameElement = function () {\n      var t = document.getElementById(this._id);if (null === t) throw new Error(\"There is no such iframe\");return t;\n    }, t.prototype._innerAPI = function () {\n      return this._getIFrameElement().contentWindow.tradingViewApi;\n    }, t.prototype._innerWindow = function () {\n      return this._getIFrameElement().contentWindow;\n    }, t.prototype._autoResizeChart = function () {\n      this._options.fullscreen && (this._getIFrameElement().style.height = window.innerHeight + \"px\");\n    }, t.prototype._create = function () {\n      var t = this,\n          e = this._render(),\n          o = document.getElementById(this._options.container_id);if (null === o) throw new Error(\"There is no such element - #\" + this._options.container_id);o.innerHTML = e;var i = this._getIFrameElement();(this._options.autosize || this._options.fullscreen) && (i.style.width = \"100%\", this._options.fullscreen || (i.style.height = \"100%\")), window.addEventListener(\"resize\", this._onWindowResize), this._onWindowResize();var n = function n() {\n        i.removeEventListener(\"load\", n, !1), i.contentWindow.widgetReady(function () {\n          t._ready = !0;for (var e = 0, o = t._readyHandlers; e < o.length; e++) {\n            var n = o[e];try {\n              n.call(t);\n            } catch (t) {\n              console.error(t);\n            }\n          }i.contentWindow.initializationFinished();\n        });\n      };i.addEventListener(\"load\", n, !1);\n    }, t.prototype._render = function () {\n      var t = window;t[this._id] = { datafeed: this._options.datafeed, customFormatters: this._options.customFormatters, brokerFactory: this._options.brokerFactory, overrides: this._options.overrides, studiesOverrides: this._options.studies_overrides, disabledFeatures: this._options.disabled_features, enabledFeatures: this._options.enabled_features, brokerConfig: this._options.brokerConfig, restConfig: this._options.restConfig, favorites: this._options.favorites, logo: this._options.logo, numeric_formatting: this._options.numeric_formatting, rss_news_feed: this._options.rss_news_feed, newsProvider: this._options.news_provider, loadLastChart: this._options.load_last_chart, saveLoadAdapter: this._options.save_load_adapter, loading_screen: this._options.loading_screen, settingsAdapter: this._options.settings_adapter, customIndicatorsUrl: this._options.indicators_file_name }, this._options.saved_data && (t[this._id].chartContent = { json: this._options.saved_data });var e = (this._options.library_path || \"\") + \"static/\" + this._options.locale + \"-tv-chart.aa0061904b783ada8056.html#symbol=\" + encodeURIComponent(this._options.symbol) + \"&interval=\" + encodeURIComponent(this._options.interval) + (this._options.timeframe ? \"&timeframe=\" + encodeURIComponent(this._options.timeframe) : \"\") + (this._options.toolbar_bg ? \"&toolbarbg=\" + this._options.toolbar_bg.replace(\"#\", \"\") : \"\") + (this._options.studies_access ? \"&studiesAccess=\" + encodeURIComponent(JSON.stringify(this._options.studies_access)) : \"\") + \"&widgetbar=\" + encodeURIComponent(JSON.stringify(this._options.widgetbar)) + (this._options.drawings_access ? \"&drawingsAccess=\" + encodeURIComponent(JSON.stringify(this._options.drawings_access)) : \"\") + \"&timeFrames=\" + encodeURIComponent(JSON.stringify(this._options.time_frames)) + \"&locale=\" + encodeURIComponent(this._options.locale) + \"&uid=\" + encodeURIComponent(this._id) + \"&clientId=\" + encodeURIComponent(String(this._options.client_id)) + \"&userId=\" + encodeURIComponent(String(this._options.user_id)) + (this._options.charts_storage_url ? \"&chartsStorageUrl=\" + encodeURIComponent(this._options.charts_storage_url) : \"\") + (this._options.charts_storage_api_version ? \"&chartsStorageVer=\" + encodeURIComponent(this._options.charts_storage_api_version) : \"\") + (this._options.custom_css_url ? \"&customCSS=\" + encodeURIComponent(this._options.custom_css_url) : \"\") + (this._options.auto_save_delay ? \"&autoSaveDelay=\" + encodeURIComponent(String(this._options.auto_save_delay)) : \"\") + \"&debug=\" + this._options.debug + (this._options.snapshot_url ? \"&snapshotUrl=\" + encodeURIComponent(this._options.snapshot_url) : \"\") + (this._options.timezone ? \"&timezone=\" + encodeURIComponent(this._options.timezone) : \"\") + (this._options.study_count_limit ? \"&studyCountLimit=\" + encodeURIComponent(String(this._options.study_count_limit)) : \"\") + (this._options.symbol_search_request_delay ? \"&ssreqdelay=\" + encodeURIComponent(String(this._options.symbol_search_request_delay)) : \"\") + (this._options.theme ? \"&theme=\" + encodeURIComponent(String(this._options.theme)) : \"\");return '<iframe id=\"' + this._id + '\" name=\"' + this._id + '\"  src=\"' + e + '\"' + (this._options.autosize || this._options.fullscreen ? \"\" : ' width=\"' + this._options.width + '\" height=\"' + this._options.height + '\"') + ' frameborder=\"0\" allowTransparency=\"true\" scrolling=\"no\" allowfullscreen style=\"display:block;\"></iframe>';\n    }, t;\n  }(),\n      d = a;window.TradingView = window.TradingView || {}, window.TradingView.version = o, t.version = o, t.onready = i, t.widget = d, Object.defineProperty(t, \"__esModule\", { value: !0 });\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/vendors/charting_library.min.js\n// module id = 2899\n// module chunks = 88\n\n//# sourceURL=webpack:///./src/vendors/charting_library.min.js?");

/***/ }),

/***/ 2900:
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"styles.tv.3cb156bf87ec.css\";\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/css/trading-view/index.scss\n// module id = 2900\n// module chunks = 88\n\n//# sourceURL=webpack:///./src/css/trading-view/index.scss?");

/***/ }),

/***/ 2901:
/***/ (function(module, exports, __webpack_require__) {

eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(2720);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = __webpack_require__(30)(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(true) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(2720, function() {\n\t\t\tvar newContent = __webpack_require__(2720);\n\t\t\tif(typeof newContent === 'string') newContent = [[module.i, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/modules/chart/trading-view/ChartTradingView.scss\n// module id = 2901\n// module chunks = 88\n\n//# sourceURL=webpack:///./src/js/modules/chart/trading-view/ChartTradingView.scss?");

/***/ })

});